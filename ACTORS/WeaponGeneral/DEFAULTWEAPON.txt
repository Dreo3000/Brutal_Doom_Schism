ACTOR BrutalWeapon : DoomWeapon
{
	Weapon.BobRangeX 0.4
	Weapon.BobRangeY 0.6
	Weapon.BobSpeed 2.9
	Weapon.BobStyle InverseSmooth
	VisibleToPlayerClass  BDoomer, Sorcerer, Paladin, TacticalDoomer
	States
	{
		// This is here so that weapons who don't have sprites or are collectable can
	// still be used.
	Spawn:
		TNT1 A 0
		TNT1 A -1
		Stop
		GoingToReady:
		TNT1 A 2
		TNT1 A 0 A_TakeInventory("BDWEaponACtion", 1)
		TNT1 A 0 A_TakeInventory("ExecuteDownedEnemy", 1)
		TNT1 A 0 A_TakeInventory("Kicking",1)
		TNT1 A 0 A_TakeInventory("Salute1", 1)
		TNT1 A 0 A_TakeInventory("Salute2", 1)
		TNT1 A 0 A_TakeInventory("Taunting",1)
		TNT1 A 0 A_TakeInventory("TossGrenade",1)
		TNT1 A 0 A_TakeInventory("Quickspell", 1)
		TNT1 A 0 A_TakeInventory("IsRunning",1)
		TNT1 A 0 A_TakeInventory("Reloading",1)
		TNT1 A 1 A_Jump(255, "Ready")
		Loop
			// The ready state often plays an animation, you don't want this state
		// to loop, that is what the readyloop is for.
	Ready:
		"####" "#" 0
		Goto ReadyLoop
				// This is a weapon state that every single weapon MUST HAVE!!!
		// You MUST give every weapon a ReadyLoop state or it will fail!
		// The purpose of this state is to serve as the weapon's idle
		// state, the weapon is doing nothing except waiting for the player
		// to take an action, such as firing or reloading.
	ReadyLoop:
		"####" "#" 0 A_WeaponReady
		Loop
		// This stuff happens every time you select a weapon.
	Select:
		"####" "#" 0 A_Giveinventory("GoSpecial",1)
		"####" "#" 0 A_TakeInventory("IsRunning", 1)
		"####" "#" 0 A_TakeInventory("TossGrenade", 1)
		"####" "#" 0 A_TakeInventory("Quickspell", 1)
		"####" "#" 0 A_TakeInventory("IsRunning", 1)
		"####" "#" 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
		"####" A 0 A_SetCrosshair(41)
		Goto SelectLoop
		// This stuff happens every time you deselect a weapon.
	Deselect:
		"####" A 0 A_SetCrosshair(41)
		"####" A 0 A_Takeinventory("Zoomed",1)
		"####" A 0 A_Takeinventory("ADSmode",1)
		"####" A 0 A_TakeInventory("TossGrenade", 1)
		"####" A 0 A_TakeInventory("Quickspell", 1)
		"####" A 0 A_TakeInventory("Kicking",1)
        "####" A 0 A_TakeInventory("Taunting",1)
        "####" A 0 A_TakeInventory("Reloading",1)
		"####" A 0 A_TakeInventory("Unloading",1)
		"####" A 0 A_TakeInventory("Salute1", 1)
		"####" A 0 A_TakeInventory("Salute2", 1)
		"####" A 0 A_ZoomFactor(1.0)
		Goto DeselectLoop
			// This will raise the weapon until it is fully on the screen,
		// ensuring that the weapon will never fail to start.
	SelectLoop:
		//"####" "#" 1 A_Raise(12)
        "####" "#" 1 A_Raise
        Loop
				// This will lower the weapon until it is fully off the screen
		// ensuring that the weapon will never fail to be unselected.
	DeselectLoop:
        //TNT1 A 1 A_Lower(99)
		TNT1 A 1 A_Lower
        Loop
				// Arbitrary states so things will load correctly. Sadly, I don't have
		// anything clever to add this time. -Dino
	Fire:
        TNT1 A 0
        Goto ReadyLoop
	AltFire:
		TNT1 A 0
		Goto ReadyLoop
		WeaponActions:
		TNT1 A 0
		TNT1 A 0 A_TakeInventory("BDWEaponACtion", 1)
		TNT1 A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
		TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		TNT1 A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
		TNT1 A 0 A_JumpIfInventory("Quickspell",1,"Quickspell")
		TNT1 A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
		TNT1 A 0 A_JumpIfInventory("Reloading",1,"Reload")
		TNT1 A 1
		TNT1 A 0 A_Jump(255, "Ready")
		TNT1 A 1
		Loop
				// New generic grenade code
		// You don't have to add grenade behavior to any weapon that inherits
		// from default weapon. It will automatically be able to throw grenades.
		/*
	TossGrenade:
		TNT1 A 0 A_TakeInventory("TossGrenade", 1)
		TNT1 A 0 A_JumpIfInventory("GrenadeAmmo", 1, 1)
		Goto NoGrenade
		TNT1 A 0 A_Print("Can't throw grenades while dual wielding.")
		Goto ReadyLoop
		*/
	TossGrenade:
		TNT1 A 0 A_SetCrosshair(41)
		WTFL A 0 A_JumpIfInventory("IsPaladin",1,"PallyGrenadeToss")
		TNT1 A 0 A_TakeInventory("TossGrenade", 1)
		TNT1 A 0 A_JumpIfInventory("GrenadeAmmo", 1, 3)
		TNT1 A 0 A_Print("No Grenades Left.")
		TNT1 A 0 A_Jump(256, "Ready")
		GRTH ABCD 1
		TNT1 A 0 A_GiveInventory("FiredGrenade", 1)
		TNT1 A 0 A_Giveinventory("Punching",1)
		TNT1 A 0 A_Giveinventory("GoSpecial",1)
		TNT1 A 0 A_PLaySound ("GRNPIN")
		GRTH EEFG 1
		TNT1 A 0 A_PLaySound ("GRNTOSS")
		GRTH HI 1
		TNT1 A 0 A_TakeInventory("GrenadeAmmo", 1)
		TNT1 A 0 A_FireCustomMissile("HandGrenade", random(-2,2), 0, 0, 0, 0, 0)
	    TNT1 A 0 A_TakeInventory("FiredGrenade", 1)
		GRTH JKLM 1
		TNT1 A 1
		TNT1 A 0 A_TakeInventory("TossGrenade", 1)
		Goto GoingToReady
	PallyGrenadeToss:
		TNT1 A 0 A_TakeInventory("TossGrenade", 1)
		TNT1 A 0 A_JumpIfInventory("GrenadeAmmo", 1, 1)
		Goto PallyNoGrenade
		TNT1 A 0 A_GiveInventory("FiredGrenade", 1)
		TNT1 A 0 A_PLaySound ("GRNPIN")
		TNT1 A 4 //wait a moment
		WTFL ABCDEF 1
		TNT1 A 0 A_PLaySound ("GRNTOSS")
		TNT1 A 0 A_TakeInventory("GrenadeAmmo", 1)
		TNT1 A 0 A_FireCustomMissile("HandGrenade", random(-2,2), 0, 0, 0, 0, 0)
	    TNT1 A 0 A_TakeInventory("FiredGrenade", 1)
		WTFL GHIJKL 1
		Goto GoingToReady
	PallyNoGrenade:
		TNT1 A 0 A_Print("No Grenades Left.")
		//TNT1 A 0 A_Jump(256, "GoingToReady")
		Goto GoingToReady
			Tryuse:
		TNT1 A 0
		TNT1 A 0 A_TakeInventory("PressedUse", 100)
		TNT1 A 0 A_FireCustomMissile("UseAttack", 0, 0, 0, 0, 0, 0)
		Goto Flash 
			Flash:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("SwitchFlashlight",1,"SwitchFlashlight")
		TNT1 A 0 A_JumpIfInventory("FlashlightOn", 1, "FlashOn")
		TNT1 A 1
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "TryUse")
		TNT1 A 3
		TNT1 A 0 A_TakeInventory("UsedStamina", 1)
		Goto Flash
		FlashOn:
	    TNT1 A 1 BRIGHT
		TNT1 A 0 A_SpawnItemEx("FlashlightSource", 32, 8, 30)
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "TryUse")
		RIFF A 0 A_FireCustomMissile("FlashlightAlerter", 0, 0, 0, 0, 0, 0)
		RIFF A 0 A_FireCustomMissile("FlashlightProjectile", 0, 0, 0, 0, 0, 0)
		RIFF A 0 A_FireCustomMissile("FlashlightProjectile2", 0, 0, 0, 0, 0, 0)
		RIFF A 0 A_FireCustomMissile("FlashlightProjectile3", 0, 0, 0, 0, 0, 0)
				TNT1 A 1 BRIGHT
		TNT1 A 0 A_SpawnItemEx("FlashlightSource", 32, 8, 30)
		RIFF A 0 A_FireCustomMissile("FlashlightProjectile", 0, 0, 0, 0, 0, 0)
		RIFF A 0 A_FireCustomMissile("FlashlightProjectile2", 0, 0, 0, 0, 0, 0)
		RIFF A 0 A_FireCustomMissile("FlashlightProjectile3", 0, 0, 0, 0, 0, 0)
				TNT1 A 1 BRIGHT
		TNT1 A 0 A_SpawnItemEx("FlashlightSource", 32, 8, 30)
		RIFF A 0 A_FireCustomMissile("FlashlightProjectile", 0, 0, 0, 0, 0, 0)
		RIFF A 0 A_FireCustomMissile("FlashlightProjectile2", 0, 0, 0, 0, 0, 0)
		RIFF A 0 A_FireCustomMissile("FlashlightProjectile3", 0, 0, 0, 0, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "TryUse")
		TNT1 A 1 BRIGHT
		TNT1 A 0 A_SpawnItemEx("FlashlightSource", 32, 8, 30)
		RIFF A 0 A_FireCustomMissile("FlashlightProjectile", 0, 0, 0, 0, 0, 0)
		RIFF A 0 A_FireCustomMissile("FlashlightProjectile2", 0, 0, 0, 0, 0, 0)
		RIFF A 0 A_FireCustomMissile("FlashlightProjectile3", 0, 0, 0, 0, 0, 0)
		TNT1 A 0 A_TakeInventory("UsedStamina", 1)
		Goto Flash
			SwitchFlashlight:
		TNT1 A 0 A_TakeInventory("SwitchFlashlight", 1)
		TNT1 A 0 A_JumpIfInventory("FlashlightOn",1,"TurnFlashOff")
		TNT1 A 0 A_Giveinventory("FlashlightOn",1)
		TNT1 A 0 A_PlaySound("FLASHON", 5)
        Goto Flash
			TurnFlashOff:
		TNT1 A 0 A_Takeinventory("FlashlightOn",1)
		TNT1 A 0 A_Light0
		TNT1 A 0 A_PlaySound("FLASHOFF", 5)
        Goto Flash
		RifleBash:
		TNT1 A 0
		TNT1 A 0 A_Takeinventory("Zoomed",1)
        TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_Takeinventory("ADSmode",1)
		TNT1 A 0 A_PlaySound("KICK")
		RIBA ACE 1
		RIFF A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, 0)
		RIBA G 5
		RIBA A 0 A_Takeinventory("Kicking",1)
		RIBA FEDCBA 1
		TNT1 AAAA 1
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"RifleBash")
		TNT1 A 0 SetPlayerProperty(0,0,0)
		TNT1 A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution")
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
		RIBA A 0 A_Takeinventory("Kicking",1)
		Goto SelectingAnimation
			DoKick:
		TNT1 A 0 A_SetCrosshair(41)
		TNT1 AA 1 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
		TNT1 A 0 A_Takeinventory("HasPlasmaWeapon",1)
		TNT1 A 0 A_TAkeinventory("HasCutingWeapon",1)
		TNT1 A 0 A_Takeinventory("Zoomed",1)
		TNT1 A 0 A_Takeinventory("PowerLightAmp",1)
        TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_Takeinventory("ADSmode",1)
		TNT1 A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution")
		NULL A 0 A_JumpIf (momZ > 0, "AirKick")
		NULL A 0 A_JumpIf (momZ < 0, "AirKick")
		TNT1 A 0 A_JumpIfInventory("IsCrouching", 1, "SlideAttack")
        TNT1 A 0 A_jumpifinventory("PowerStrength",1,"BerserkerKick")
		//TNT1 A 0 A_JumpIfInventory("RifleSelected", 1, "RifleBash")
		TNT1 A 0 A_PlaySound("KICK")
		TNT1 A 0 SetPlayerProperty(0,1,0)
		K1CK A 0 A_JumpIfInventory("IsPaladin",1,3)
		K2CK A 0 A_JumpIfInventory("IsSorcerer",1,2)
		KICK A 0
		"####" BCD 1
		"####" A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -7)
        "####" H 3 A_Takeinventory("Kicking",1)
		"####" IGF 1
		"####" A 0 A_Takeinventory("Kicking",1)
		TNT1 A 0 SetPlayerProperty(0,0,0)
		"####" EDCBA 1 A_JumpIfInventory("Kicking",1,"KickRight")
		TNT1 A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution")
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		Goto GoingToReady
	    BerserkerKick:
		TNT1 A 0 A_PlaySound("KICK")
		K1CK A 0 A_JumpIfInventory("IsPaladin",1,3)
		K2CK A 0 A_JumpIfInventory("IsSorcerer",1,2)
		KICK A 0
				"####" BCD 1
        "####" A 0 A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -7)
        "####" H 3 A_Takeinventory("Kicking",1)
		"####" IGF 1
		"####" ED 1
		"####" CBA 1 A_JumpIfInventory("Kicking",1,"KickRight")
		TNT1 A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution")
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		Goto GoingToReady
		KickRight:
		K1K2 A 0 A_JumpIfInventory("IsPaladin",1,3)
		K2K2 A 0 A_JumpIfInventory("IsSorcerer",1,2)
		KIK2 A 1 A_Giveinventory("Kicking",1)
		"####" ABC 1
        "####" A 0 A_PlaySound("KICK")
		"####" A 0 
		"####" A 0 A_SetPitch(pitch-9)
		"####" A 0 A_SetAngle(angle+9)
		"####" A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, 0)
		"####" D 1
		"####" A 0 A_SetPitch(pitch+2)
		"####" A 0 A_SetAngle(angle-2)
		"####" D 1
		"####" A 0 A_SetPitch(pitch+2)
		"####" A 0 A_SetAngle(angle-2)
		"####" E 1 A_TakeInventory("Kicking",1)
		"####" A 0 A_SetPitch(pitch+1)
		"####" A 0 A_SetAngle(angle-1)
		"####" E 1
		"####" A 0 A_SetPitch(pitch+1)
		"####" A 0 A_SetAngle(angle-1)
		"####" C 1 A_JumpIfInventory("Kicking",1,"AirKick")
		"####" A 0 A_SetPitch(pitch+1)
		"####" A 0 A_SetAngle(angle-1)
		"####" B 2 A_JumpIfInventory("Kicking",1,"AirKick")
		"####" A 0 A_SetPitch(pitch+1)
		"####" A 0 A_SetAngle(angle-1)
		"####" A 2 A_JumpIfInventory("Kicking",1,"AirKick")
		"####" A 0 A_SetPitch(pitch+1)
		"####" A 0 A_SetAngle(angle-1)
		"####" A 2 A_JumpIfInventory("Kicking",1,"AirKick")
		"####" A 1 A_JumpIfInventory("Kicking",1,"AirKick")
		Goto GoingToReady
		AirKick:
		TNT1 A 0
		K1CK J 0 A_JumpIfInventory("IsPaladin",1,3)
		K2CK J 0 A_JumpIfInventory("IsSorcerer",1,2)
		KICK J 1
	    "####" A 0 A_jumpifinventory("PowerStrength",1,"SuperAirKick")
		"####" A 0 A_PlaySound("KICK")
		"####" A 0 A_Recoil (-15)
		"####" JKLMN 1
        "####" A 0 A_FireCustomMissile("AirKickAttack", 0, 0, 0, -31)
		"####" A 0 
        "####" O 3
		"####" A 0 A_Takeinventory("Kicking",1)
		"####" PQ 2
		"####" RS 1
		"####" T 1 A_JumpIfInventory("Kicking",1,"LeftFinishingKick")
		"####" A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution")
		"####" A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
		"####" A 2 A_JumpIfInventory("Kicking",1,"LeftFinishingKick")
		"####" A 1 A_JumpIfInventory("Kicking",1,"LeftFinishingKick")
		Goto GoingToReady
			SuperAirKick:
		TNT1 A 0
		K1CK J 0 A_JumpIfInventory("IsPaladin",1,3)
		K2CK J 0 A_JumpIfInventory("IsSorcerer",1,2)
		KICK J 1
		"####" A 0 A_PlaySound("KICK")
		"####" A 0 A_Recoil (-15)
		"####" JKLMN 1
        "####" A 0 A_FireCustomMissile("SuperAirKickAttack", 0, 0, 0, -31)
        "####" O 3
		"####" A 0 A_Takeinventory("Kicking",1)
		"####" PQ 2
		"####" RS 1
		"####" T 1 A_JumpIfInventory("Kicking",1,"LeftFinishingKick")
		"####" A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution")
		"####" A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
		"####" A 2 A_JumpIfInventory("Kicking",1,"LeftFinishingKick")
		"####" A 1 A_JumpIfInventory("Kicking",1,"LeftFinishingKick")
		Goto GoingToReady
		SlideAttack:
		TNT1 A 0
		TNT1 A 0 SetPlayerProperty(0,1,0)
		KICK A 0 A_Takeinventory("Kicking",1)
		TNT1 A 0 A_PlaySound("KICK")
		TNT1 A 0 A_Recoil (-16)
		TNT1 A 0 A_PlaySound("SlideKickStart", 5)
		S1DK A 0 A_JumpIfInventory("IsPaladin",1,3)
		S2DK A 0 A_JumpIfInventory("IsSorcerer",1,2)
		SLDK A 1
		"####" ABC 1
		"####" A 0 A_SetPItch(10)
        "####" A 0 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
        "####" E 1
		"####" A 0 A_Recoil (-14)
		"####" A 0 A_SetPItch(10)
		"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
		"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
		Goto FinishSlide
		"####" F 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
		"####" A 0 A_Recoil (-12)
		"####" A 0 A_SetPItch(10)
		"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
		"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
		Goto FinishSlide
				"####" G 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
		"####" A 0 A_Recoil (-8)
		"####" A 0 A_SetPItch(10)
		"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
		"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
		Goto FinishSlide
				"####" F 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
		"####" A 0 A_Recoil (-6)
		"####" A 0 A_SetPItch(10)
		"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
		"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
		Goto FinishSlide
				"####" G 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
		"####" A 0 A_Recoil (-4)
		"####" A 0 A_SetPItch(10)
		"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
		"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
		Goto FinishSlide
				"####" F 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
		"####" A 0 A_Recoil (-4)
		"####" A 0 A_SetPItch(10)
		"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
		"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
		Goto FinishSlide
				"####" G 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
		"####" A 0 A_Recoil (-3)
		"####" A 0 A_SetPItch(10)
		"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
		"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
		Goto FinishSlide
				"####" F 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
		"####" A 0 A_Recoil (-3)
		"####" A 0 A_SetPItch(10)
		"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
		"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
		Goto FinishSlide
				"####" G 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
		"####" A 0 A_Recoil (-3)
		"####" A 0 A_SetPItch(10)
		"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
		"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
		Goto FinishSlide
				"####" F 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
		"####" A 0 A_Recoil (-2)
		"####" A 0 A_SetPItch(10)
		"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
		"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
		Goto FinishSlide
				"####" G 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
		"####" A 0 A_Recoil (-1)
		"####" A 0 A_SetPItch(10)
		"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
		"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
		Goto FinishSlide
				"####" F 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
		"####" A 0 A_Recoil (-1)
		"####" A 0 A_SetPItch(10)
		"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
		"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
		Goto FinishSlide
				"####" G 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
		"####" A 0 A_Recoil (-2)
		"####" A 0 A_SetPItch(10)
		"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
		"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
		"####" A 0 A_TAkeInventory("KickHasHit", 1)
		Goto FinishSlide
			FinishSlide:	
		TNT1 A 0 A_Takeinventory("Kicking",1)
		TNT1 A 0
		TNT1 A 0 A_PlaySound("SlideKickStop", 5)
		S1DK H 0 A_JumpIfInventory("IsPaladin",1,3)
		S2DK H 0 A_JumpIfInventory("IsSorcerer",1,2)
		SLDK H 1
		"####" A 0 SetPlayerProperty(0,0,0)		
				"####" A 0 A_JumpIfInventory("IsPaladin",1,2)
		"####" A 0 A_Jump(256,5)
		"####" A 0 A_JumpIfInventory("FiredSecondary",1,2)
		"####" A 0 A_Jump(256,3)
		"####" A 0 A_GiveInventory("DoUppercutNow",1)
		"####" A 0 A_SelectWeapon("Berserker_Melee_Attacks")
						"####" HD 2 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
		"####" A 0 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
		"####" CBA 2 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
		"####" A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution")
		"####" A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
		"####" A 0 A_Takeinventory("Kicking",1)
		Goto GoingToReady	
			FinishSlideHitwall:	
		TNT1 A 0
		S1DK H 0 A_JumpIfInventory("IsPaladin",1,3)
		S2DK H 0 A_JumpIfInventory("IsSorcerer",1,2)
		SLDK H 1
		"####" A 0 A_Stop
		"####" HDCBA 2
		"####" A 0 A_TAkeInventory("KickHasHit", 1)
		"####" A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution")
		"####" A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
		"####" A 0 A_Takeinventory("Kicking",1)
		"####" A 0 SetPlayerProperty(0,0,0)
		Goto GoingToReady		
	LeftFinishingKick:
		TNT1 A 0
		K1K3 A 0 A_JumpIfInventory("IsPaladin",1,3)
		K2K3 A 0 A_JumpIfInventory("IsSorcerer",1,2)
		KIK3 A 1
		"####" A 0 A_Recoil(-10)
		"####" ABC 1
        "####" A 0 A_PlaySound("KICK")
		"####" A 0 A_Giveinventory("Kicking",1)
		"####" A 0 A_SetPitch(pitch-9)
		"####" A 0 A_SetAngle(angle-9)
		"####" D 1 A_FireCustomMissile("KickAttack", 0, 0, 0, 0)
		"####" A 0 A_SetPitch(pitch+2)
		"####" A 0 A_SetAngle(angle+3)
		"####" E 1
		"####" A 0 A_SetPitch(pitch+2)
		"####" A 0 A_SetAngle(angle+3)
		"####" F 1 A_FireCustomMissile("KickAttack", 0, 0, 0, 0)
		"####" A 0 A_SetPitch(pitch+1)
		"####" A 0 A_SetAngle(angle+3)
		"####" G 1 
		"####" A 0 A_SetPitch(pitch+1)
		"####" A 0 A_SetAngle(angle+2)
		"####" H 1 A_FireCustomMissile("KickAttack", 0, 0, 0, 0)
		"####" A 0 A_SetPitch(pitch+1)
		"####" A 0 A_SetAngle(angle+2)
		"####" I 1
		"####" A 0 A_SetPitch(pitch+1)
		"####" A 0 A_SetAngle(angle+1)
		"####" J 1 A_FireCustomMissile("KickAttack", 0, 0, 0, 0)
		"####" A 0 A_SetPitch(pitch+1)
		"####" A 0 A_SetAngle(angle+1)
		"####" K 1
		TNT1 A 1 
		Goto GoingToReady	
    Taunt:
		TNT1 A 0 A_SetCrosshair(41)
		TNT1 A 0 A_JumpIfInventory("IsSorcerer",1,"TauntBlinkTeleport")
		TNT1 A 0 A_Takeinventory("Zoomed",1)
        TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_Takeinventory("Taunting",1)
		        TNT1 A 10
		FUCK A 1
		TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", 0, 0, -1, 0)
		TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", -9, 0, -1, 0)
		TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", 9, 0, -1, 0)
		TNT1 A 0 A_JumpIfInventory("GenderFemale", 1, "TauntFemale")
        FUCK B 1 A_PlaySound("FUCK", 2)
        FUCK CD 1 A_AlertMonsters
		FUCK E 15 A_Takeinventory("Taunting",1)
        FUCK DCBA 1
        TNT1 A 10
		Goto GoingToReady 
			TauntFemale:
		TNT1 A 0 A_SetCrosshair(41)
		TNT1 A 0
		FUCK B 1 A_PlaySound("FTAUNT", 2)
        FUCK CD 1 A_AlertMonsters
		FUCK E 15 A_Takeinventory("Taunting",1)
        FUCK DCBA 1
        TNT1 A 10
		Goto GoingToReady
		TauntBlinkTeleport:
		TNT1 A 0 A_TakeInventory("Taunting",1)
		BlinkageHold:
		TNT1 A 0 A_ChangeFlag ("SPECTRAL", 1)
		TNT1 A 0 A_ChangeFlag ("THRUACTORS", 1)
		//In order to actually Teleport you have to press the taunt button again.  If you want an instant teleport just get rid of this section.
        MLNG ABCD 2 BRIGHT A_JumpIfInventory("Taunting",1,"BlinkageHold2")
		TNT1 A 0 A_SpawnItemEx("BlinkTargetMissile",36*Cos(pitch),0,30-36*Sin(pitch),100*Cos(pitch),0,-100*Sin(pitch))//This is a preview of where your teleport path is. It's not perfect, but it helps, I think.
		//Make sure if you change the speeds of the teleport function below, change the speeds on the preview spawn function above.  
		//If you change the amount of frames you're teleporting (right now it's 8) change how many frames the "BlinkTargetMissile" stays alive in that actor's spawn state.
		MLNG E 0 //A_Jump(256,"BlinkageHold")
		BlinkageHold2:
		MLNG E 1 //A_FireCustomMissile("BlinkTargetMissile")  Don't need to use a projectile at all
		//Change the speeds (the 100s) to change how far you teleport, OR move the second ChangeVelocity to happen sooner.
		TNT1 A 0 A_ChangeVelocity(100*Cos(pitch),0,-100*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
		MLNG FG 2 BRIGHT A_ZoomFactor(0.70, ZOOM_INSTANT)
		MLNG HI 2 BRIGHT A_ZoomFactor(1.00)
		MLNG H 0 A_ChangeVelocity(0,0,0,CVF_REPLACE)
		//I might recommend creating an explosion here at the landing since it does take a moment to reorient and get ready to start shooting
		//Just something to think about.
				//MLNG E 1 A_FireBullets(0,0,1,0,"BlinkTargetPuff",FBF_NORANDOMPUFFZ,512)
		//TNT1 A 0 A_ReFire("BlinkageHold") Don't really need this at the moment
		TNT1 A 0 A_Takeinventory("Taunting",1)	
		TNT1 A 0 A_ChangeFlag ("THRUACTORS", 0)
		TNT1 A 0 A_ChangeFlag ("SPECTRAL", 0)
			//	TNT1 A 0 A_Teleport("Teleportium","BlinkTarget",None,TF_TELEFRAG,0,0)
		//TNT1 A 0 A_Teleport("Teleportium","BlinkTargetFloor",None,TF_TELEFRAG,0,0)
		Goto GoingToReady
		Salute:
		TNT1 A 0 A_SetCrosshair(41)
	    TNT1 A 0 SetPlayerProperty(0,1,0)
		TNT1 A 0 A_ALertMonsters
		NULL A 0 ACS_ExecuteAlways(400, 0, 0, 0, 0)//Start Camera
		SALU ABCDEDCDEDCDEDCBA 4
		MARN A 0 ACS_ExecuteAlways(402, 0, 0, 0, 0)//Stop Camera
		TNT1 A 0 A_TakeInventory("Salute1",1)
		TNT1 A 0 A_TakeInventory("Salute2",1)
		TNT1 A 0 SetPlayerProperty(0,0,0)
		Goto GoingToReady
		//Quickspell
	Quickspell:	
		TNT1 A 0
		"####" A 0 A_TakeInventory("Quickspell", 1)
		TNT1 A 0 A_JumpIfInventory("IsSorcerer", 1, 3)
		TNT1 A 0 A_Print("You are not a mage !")
		TNT1 A 0 A_Jump(256, "Ready")
		"####" AAAAA 0
		//"####" A 2
		"####" A 0 A_Takeinventory("HasPlasmaWeapon",1)
		TNT1 A 0 A_TAkeinventory("HasCutingWeapon",1)
		TNT1 A 0 A_Takeinventory("Zoomed",1)
		TNT1 A 0 A_Takeinventory("PowerLightAmp",1)
        TNT1 A 0 A_Takeinventory("ADSmode",1)
		TNT1 A 0 A_JumpIfInventory("QuickFireSpellSelected",1,"QuickFireSpell")
		TNT1 A 0 A_JumpIfInventory("QuickLightningSpellSelected",1,"QuickLightningSpell")
		TNT1 A 0 A_JumpIfInventory("QuickFrostSpellSelected",1,"QuickFrostSpell")
					QuickFireSpell: 
		TNT1 A 0
		TNT1 A 2
		TNT1 A 0 A_GunFlash("SpellFlash")
		FOSP AB 1 
		TNT1 A 0 A_Giveinventory("Punching",1)
		TNT1 A 0 A_Giveinventory("GoSpecial",1)
		TNT1 A 0 A_AlertMonsters 
		TNT1 A 0 A_PlaySound("IGNITE")
		FOSP CCDD 1 
		FOSP EEFFGG 1 BRIGHT 
		FOSP GGHH 1 BRIGHT
		TNT1 A 0 A_FireCustomMissile("MageFireBall", 0, 1, 0, -10)
		TNT1 A 0 A_SetPitch(-6.0 + pitch)
		TNT1 A 0 A_FireCustomMissile("ShakeYourAssDouble", 0, 0, 0, 0)
		FOSP IJ 1 BRIGHT A_SetPitch(+2 + pitch)
		FOSP KCBBAA 1 A_SetPitch(+0.5 + pitch)
		TNT1 A 0 A_TakeInventory("Quickspell", 1)
		Goto GoingToReady
		QuickLightningSpell: 
		TNT1 A 0
		//TNT1 A 2
		TNT1 A 0 A_GunFlash("SpellFlash")
		LGQS AB 1 
		TNT1 A 0 A_Giveinventory("Punching",1)
		TNT1 A 0 A_Giveinventory("GoSpecial",1)
		TNT1 A 0 A_AlertMonsters 
		TNT1 A 0 A_PlaySound("TPortalZap", CHAN_WEAPON,2) 
		LGQS CCDD 1 
		LGQS EFGHIJ 1 BRIGHT 
		LGQS KL 1 BRIGHT A_FireCustomMissile("ShakeYourAssQuad", 0, 0, 0, 0)
		TNT1 A 0 A_RailAttack(90,10,0,none,"9F 9F FF",RGF_SILENT | RGF_FULLBRIGHT,25,"LightningPuff",0,0,600,5,0.001,5.0,"StormTrailParticle",-15) 
		TNT1 A 0 A_SetPitch(-6.0 + pitch)
		TNT1 A 0 A_FireCustomMissile("LightningMissile3",0,0,0,-10)
		TNT1 A 0 A_FireCustomMissile("ShakeYourAssDouble", 0, 0, 0, 0)
		LGQS MNO 1 BRIGHT A_SetPitch(+2 + pitch)
		LGQS PQR 1 BRIGHT A_SetPitch(+0.5 + pitch)
		TNT1 A 0 A_TakeInventory("Quickspell", 1)
		LGQS FEDCBA 1
		Goto GoingToReady
			QuickFrostSpell:	
		TNT1 A 0
		TNT1 A 2
		TNT1 A 0 A_GunFlash("SpellFlash")
		TNT1 A 0 A_Giveinventory("HasFreezerWeapon",1)
		IS1F AABB 1
		TNT1 A 0 A_Giveinventory("Punching",1)
		TNT1 A 0 A_Giveinventory("GoSpecial",1)
		IS1F CCDD 1
		IS1F KLF 1
		IS1F MNO 1 BRIGHT
		IS1F A 0 A_Giveinventory("HasFreezerWeapon",1)
		IS1F G 1 BRIGHT A_FireCustomMissile ("BlueFlareSpawn",0,0,0,0)
		IS1F A 0 A_PlaySound("ICESHA", 1)
		IS1F H 1 BRIGHT 
		TNT1 A 0 A_FireCustomMissile("BlueFlareSpawn",0,0,0,0)
		IS1F I 1 BRIGHT A_FireCustomMissile ("FrostShard",random(-5,5),0,0,random(-12,12)) 
		TNT1 A 0 A_FireCustomMissile("BlueFlareSpawn",0,0,0,0)
		IS1F J 1 BRIGHT A_FireCustomMissile ("FrostShard",random(-5,5),0,0,random(-12,12))
		TNT1 A 0 A_Recoil(3)
		TNT1 A 0 A_FireCustomMissile("BlueFlareSpawn",0,0,0,0)
		IS1F K 1 BRIGHT A_FireCustomMissile ("FrostShard",random(-5,5),0,0,random(-12,12))
		TNT1 A 0 A_TakeInventory("Quickspell", 1)
		TNT1 A 0 A_Takeinventory("HasFreezerWeapon",1)
		IS1F DCBAA 1
		Goto GoingToReady	
		DoExecution:
		TNT1 A 0 A_SetCrosshair(41)
		TNT1 A 0 A_SetPitch(65)
		TNT1 A 1
		TNT1 A 0 A_ChangeFLag("NOPAIN", 1)
		TNT1 A 0 A_ChangeFLag("PUSHABLE", 0)
		TNT1 A 0 A_Stop
		TNT1 A 0 SetPlayerProperty(0,1,4)
		KICK A 0 A_Takeinventory("Kicking",1)
		KICK A 0 A_Takeinventory("ExecuteDownedEnemy",1)
		//TTNT1 A 0 A_JumpIfInventory("IsFloating", 1, "ExecuteAirStomp")
		TNT1 A 0 A_JumpIfInventory("ExecuteBashWall", 1, "BashWall")
		TNT1 A 0 A_JumpIfInventory("ExecuteStompWall", 1, "StompWall")
				TNT1 AAAAA 1 A_SetPitch(70)
		TNT1 A 0 A_Jump(256, "Execution1", "Execution2", "Execution3")
		Goto Execution1
		Stompwall:
		TNT1 A 0 A_Stop
		//TTNT1 A 0 A_JumpIfInventory("IsFloating", 1, "ExecuteAirStomp")
		TNT1 A 0 A_SetPitch(10)
		TNT1 A 0 A_Recoil(-1)
		KICK JKLMN 1 A_Recoil(-1)
        RIFF A 0 A_FireCustomMissile("ExecutionAttackStompWall", 0, 0, 0, -7)
		        KICK OOO 2  A_Recoil(-1)
		KICK A 0 A_Takeinventory("Kicking",1)
		KICK PQRST 1
				KICK A 0 A_Takeinventory("ExecuteStompWall",1)
		KICK A 0 A_Takeinventory("ExecuteBashWall",1)
		TNT1 A 5
		Goto FinishExecution+8
			Bashwall:
		TNT1 A 0
		//TTNT1 A 0 A_JumpIfInventory("IsFloating", 1, "ExecuteAirStomp")
		TNT1 A 0 A_PlaySound("imp/pain", 4)
		TNT1 A 0 A_ZoomFactor(1.3)
		IEHW A 2
		TNT1 A 0 A_ZoomFactor(1.0)
		IEHW A 8
		IEHW AAA 1 A_SetAngle(angle+6)
		IEHW BCDEF 1 A_SetAngle(angle+6)
		IEHW G 3
		TNT1 AA 0 A_CustomMissile("XDeath1", 48, 0, 45, 2)
		TNT1 A 0 A_PlaySound("imp/pain", 4)
		TNT1 A 0 A_CustomMissile("KickAttack", 48, 0, 45, 2)
				IEHW HIJKKK 1 A_SetAngle(angle-3)
		IEHW KKKJIH 1 A_SetAngle(angle+3)
		IEHW FG 3
		TNT1 AA 0 A_CustomMissile("XDeath1", 48, 0, 45, 2)
		TNT1 A 0 A_PlaySound("imp/pain", 4)
		TNT1 A 0 A_CustomMissile("KickAttack", 48, 0, 45, 2)
				IEHW HIJKKK 1 A_SetAngle(angle-3)
		IEHW KKKJIH 1 A_SetAngle(angle+3)
		IEHW FG 3
		TNT1 AA 0 A_CustomMissile("XDeath1", 48, 0, 45, 2)
		TNT1 A 0 A_PlaySound("imp/pain", 4)
		TNT1 A 0 A_CustomMissile("KickAttack", 48, 0, 45, 2)
				IEHW HIJKKK 1 A_SetAngle(angle-3)
		IEHW KKKJIH 1 A_SetAngle(angle+3)
		TNT1 AA 0 A_CustomMissile("XDeath1", 48, 0, 45, 2)
		TNT1 A 0 A_CustomMissile("ImpHeadExplode", 48, 0, 45, 2)
		TNT1 A 0 A_CustomMissile("XDeath2", 48, 0, 45, 2)
		TNT1 AAA 0 A_CustomMissile("KickAttack", 48, 0, 45, 2)
		IEHW LMNO 1
		IEHW O 6
		IEHW PQRST 2 A_SetAngle(angle-4)
		TNT1 A 0 A_SpawnItem ("GrowingBloodPool")
		TNT1 A 0 A_SpawnItem("DeadImp_NoHead")
		TNT1 AAA 1 A_SetAngle(angle-3)
				KICK A 0 A_Takeinventory("Kicking",1)
		KICK A 0 A_Takeinventory("ExecuteBashWall",1)
		KICK A 0 A_Takeinventory("ExecuteStompWall",1)
				TNT1 A 5
		Goto FinishExecution+8	
			ExecuteAirStomp:
		TNT1 A 0
		TNT1 A 0 A_Stop
		TNT1 A 0 A_GiveInventory("IsExecutingOnAir", 1)
		TNT1 A 0 ThrustThingZ(0, 10, 0, 1)
		STOM ABCCCCC 1 A_SetPitch(80)
		STOM CCCCCCCCCCC 1 A_CheckFloor("DoAirStomp")
	DoAirStomp:
		RIFF AAA 0 A_FireCustomMissile("ExecutionAttackKick", 0, 0, 0, 0)
        STOM D 5
		TNT1 A 0 ThrustThingZ(0, 20, 1, 1)
		TNT1 A 0 A_TakeInventory("IsExecutingOnAir", 1)
		KICK A 0 A_Takeinventory("ExecuteStompWall",1)
		KICK A 0 A_Takeinventory("ExecuteBashWall",1)
		Goto FinishExecution
			Execution1:	
		KICK BCD 1
		//TTNT1 A 0 A_JumpIfInventory("IsFloating", 1, "ExecuteAirStomp")
		RIFF A 0 A_FireCustomMissile("ExecutionAttackKick", 0, 0, 0, -7)
        KICK H 5
		KICK A 0 A_Takeinventory("Kicking",1)
		KICK I 1
		KICK GFEDCBA 1
		TNT1 A 5
		Goto FinishExecution
			Execution2:
		TNT1 A 0
		TNT1 A 0 A_ZoomFactor(1.5)
		//TTNT1 A 0 A_JumpIfInventory("IsFloating", 1, "ExecuteAirStomp")
		PUN4 B 1 A_Stop
        PUN4 C 1 A_PlaySound("skeleton/swing")
		PUN4 D 1 A_FireCustomMissile("ExecutionAttackMelee", 0, 0, 0, 0)
		PUN4 E 3 A_Stop
		PUN4 DCB 2 A_Stop
		PUN3 A 1 A_Stop
        PUN3 B 1 A_PlaySound("skeleton/swing")
		PUN3 C 1 A_FireCustomMissile("ExecutionAttackMelee", 0, 0, 0, 0)
		PUN3 E 3 A_Stop
		PUN3 CBA 2 A_Stop
				PUN4 B 1 A_Stop
        PUN4 C 1 A_PlaySound("skeleton/swing")
		PUN4 D 1 A_FireCustomMissile("ExecutionAttackMelee", 0, 0, 0, 0)
		PUN4 E 3 A_Stop
		PUN4 DCB 2 A_Stop
		PUN3 A 1 A_Stop
        PUN3 B 1 A_PlaySound("skeleton/swing")
		PUN3 C 1 A_FireCustomMissile("ExecutionAttackMelee", 0, 0, 0, 0)
		PUN3 E 3 A_Stop
		PUN3 CBA 2 A_Stop
				PUN4 B 1 A_Stop
        PUN4 C 1 A_PlaySound("skeleton/swing")
		PUN4 D 1 A_FireCustomMissile("ExecutionAttackMelee", 0, 0, 0, 0)
		PUN4 E 3 A_Stop
		PUN4 DCB 2 A_Stop
				TNT1 A 1
		PUN3 A 1 A_Stop
        PUN3 B 1 A_PlaySound("skeleton/swing")
		PUN3 C 1 
		TNT1 AAA 0 A_FireCustomMissile("ExecutionAttackKick", 0, 0, 0, 0)
		PUN3 E 6 A_Stop
		PUN3 CBA 2 A_Stop
		TNT1 A 0 A_ZoomFactor(1.0)
				TNT1 A 5
		Goto FinishExecution
			Execution3:
				KIKF ABC 1
		//TTNT1 A 0 A_JumpIfInventory("IsFloating", 1, "ExecuteAirStomp")
        TNT1 A 0 A_PlaySound("KICK")
		KIKF D 1
		TNT1 AAA 0 A_FireCustomMissile("ExecutionAttackFatality", 0, 0, 0, 0)
		KIKF DDDDDDD 1 A_SetPitch(Pitch-10)
		KIKF ECBA 2
		TNT1 A 0 SetPlayerProperty(0,0,4)
		TNT1 A 0 A_ChangeFLag("NOPAIN", 0)
		TNT1 A 0 A_ChangeFLag("PUSHABLE", 1)
		TNT1 A 5 
		KICK A 0 A_Takeinventory("ExecuteDownedEnemy",1)
		Goto GoingToReady
			FinishExecution:
		TNT1 A 0
		TNT1 AAAAAAAA 1 A_SetPitch(Pitch-10)
		TNT1 A 0 A_ChangeFLag("NOPAIN", 0)
		TNT1 A 0 A_ChangeFLag("PUSHABLE", 1)
		TNT1 A 0 SetPlayerProperty(0,0,4)
		KICK A 0 A_Takeinventory("ExecuteDownedEnemy",1)
		Goto GoingToReady
	}
}
ACTOR FlashlightProjectile: FastProjectile
{
	Radius 36
	Height 36
	Speed 600
	Damage 0
	Mass 0
	+DONTSPLASH
	+NOTIMEFREEZE
	-ACTIVATEIMPACT
	-ACTIVATEPCROSS
	States
	{
	Spawn:
        TNT1 A 2
		Stop
    Death:
	XDeath:
	    TNT2 A 3
		Stop
	}
}
ACTOR FlashlightAlerter: FastProjectile
{
	Radius 2
	Height 2
	Speed 600
	Damage 0
	Mass 0
	+DONTSPLASH
	+NOTIMEFREEZE
	-ACTIVATEIMPACT
	-ACTIVATEPCROSS
	States
	{
	Spawn:
        TNT1 A 2
		Stop
    Death:
	XDeath:
	    TNT2 A 3
		TNT1 A 0 A_AlertMonsters(150)
		Stop
	}
}
ACTOR FlashlightProjectile2: FlashlightProjectile
{
	Radius 22
	Height 2
	+CLIENTSIDEONLY
}
ACTOR FlashlightProjectile3: FlashlightProjectile
{
	Radius 1
	Height 1
	+CLIENTSIDEONLY
	Speed 600
}
ACTOR FlashlightSource: FlashlightProjectile
{
	Radius 2
	Height 2
	Speed 0
	Renderstyle Add
	YScale 0.3
	XScale 0.5
	Alpha 0.9
		States
	{
	Spawn:
	PLFL A 2
	Stop
	Death:
	Xdeath:
	Stop
	}
}