	//Updated shotgun code
	////////////////////////////////////////////////////////////////////////////////
	// ======================= BROOOOOOOODUL SHOTGUN =============================//
	// =================== re-written by Dinosaur Nerd ===========================//
	// ===================== Use it however you want =============================//
	// ===========================================================================//
	// ==== This one has a lot of info in it to help you out and give you the ====//
	// ==== chance to learn some new tricks, be sure to read the green text.  ====//
	// ===========================================================================//
	////////////////////////////////////////////////////////////////////////////////
	ACTOR Shot_Gun : BrutalWeapon
	{
		Game Doom
		SpawnID 27
		Weapon.SelectionOrder 1300
		Weapon.AmmoUse1 0
		Weapon.AmmoUse2 0
		Weapon.AmmoGive1 0
		Weapon.AmmoGive2 0
		Weapon.AmmoType1 "AmmoShell"
		Weapon.AmmoType2 "ShotgunAmmo"
		Inventory.PickupMessage "$GOTSHOTGUN"
		Inventory.PickupSound "weapons/sgpump"
		Obituary "$OB_MPSHOTGUN"
		AttackSound "None"
		+WEAPON.NOAUTOAIM
		+WEAPON.NOAUTOFIRE
		+FORCEXYBILLBOARD
		Scale 0.9
		States
		{
		Spawn:
			TNT1 A 2
			TNT1 A 1 A_SpawnItem("EmptyShotgunSpawner",50)
			Stop
			// Shotgun selection begins
		Select:
			"####" A 0 A_Giveinventory("GoSpecial",1)//God damnit Dino, THIS is important for fatalities, shotgun token need just for skin
			"####" A 0 A_Giveinventory("ShotgunSelected",1)	// Give the player a shotgun selected token, these are important for fatalities
			"####" A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")	// If the player is performaing a fatality, go to the approprate state
			SPSS A 0 A_JumpIfInventory("IsPaladin",1,3)	// If the player is the paladin, skip the marine frame and continue with paladin frames
			SMSS A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHSS A 0 A_SelectWeapon("CryoShotgun")	// This is the marine frame, it is displayed if the player does not have the "IsPaladin" token
			// This is an important function that raises the weapon onto the screen,
			// the 99 is the speed at which the weapon is raised, default is 6.
			// This is a zero tick frame, which means it is instantly raised onto
			// the screen, this is done to be consistent with the way brutal doom
			// handles weapon ready animations.
			// Weapons are not pulled up from the bottom of the screen in brutal
			// doom, instead they play a specific animation.
			"####" AAAAAAAAAAAA 0 A_Raise
			// This is the specific animation for weapon ready, some additional
			// A_Raise functions are called to ensure the weapon comes all the way
			// onto the screen
			"####" ABCD 1 A_Raise
			// This Goto Super::Select goes to the "Select" state found in the
			// BrutalWeapon, which is located in DEFAULTWEAPON.txt.
			Goto Super::Select
					// Pretty simple, this one deselects the weapon.
		Deselect:
			// This is just for the shotgun sprites that use the swinging strap.
			"####" A 0 A_Takeinventory("UseShotgunStrap",1)
			SPSS D 0 A_JumpIfInventory("IsPaladin",1,3)
			SMSS A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHSS D 0 
			// This is identical to the A_Raise function, except that this lowers
			// the weapon off the screen.
			"####" DCBA 1 A_Lower
			// This behaves the same way as Goto Super::Select, except for deselecting
			// the weapon.
			Goto Super::Deselect
				Ready:
			// This is placed here for now, should be moved if there is a replaying
			// idle animation for weapons
		ReadyLoop:
			// When creating a weapon, the very first frame MUST have a valid sprite.
			// You CANNOT use "####" for the first sprite in the Ready: state.
			SPTN A 0 A_JumpIfInventory("IsPaladin",1,3)	// This is the first frame.
			SMTN A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHTN A 0 A_SelectWeapon("CryoShotgun")
			// What follows is a bunch of checks to see if the player is doing any
			// sort of special action.
			// These special actions are executed by means of scripts found in keyconf
			// and the ACS Source COMMANDS.txt
			"####" A 0 A_JumpIfInventory("Kicking",1,"DoKick")	// Check if player is kicking
			"####" A 0 A_JumpIfInventory("Taunting",1,"Taunt")	// Check if player is taunting
			"####" A 0 A_JumpIfInventory("Reloading",1,"Reload")	// check if player is reloading
			"####" A 0 A_JumpIfInventory("Salute1", 1, "Salute")	// check if player is saluting
			"####" A 0 A_JumpIfInventory("Salute2", 1, "Salute")	// check if player is saluting
			"####" A 0 A_JumpIfInventory("Unloading",1,"Unload")	// check if player is unloading
			"####" A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")	// check if player is throwing grenade
			"####" A 0 A_JumpIfInventory("Quickspell",1,"Quickspell")
			"####" A 0 A_SetCrosshair(36)
		OkToFire:
			// We use this same sprite check to see if we are playing as the paladin
			// or as a marine any time sprite names change.
			SPTN A 0 A_JumpIfInventory("IsPaladin",1,3)
			SMTN A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHTN A 0 A_SelectWeapon("CryoShotgun")
			// A_WeaponReady is how the game checks to see if you are firing or using
			// alt fire, or holding the fire button.
			"####" A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			"####" A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
			// We want to return to ReadyLoop almost every time unless you want to
			// replay a weapon ready animation.
			Goto ReadyLoop
				CheckSprint:
			SPTN A 0 A_JumpIfInventory("IsPaladin",1,3)
			SMTN A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHTN A 0
			"####" A 1 A_WeaponReady(WRF_NOFIRE)
			"####" A 0 A_Takeinventory("Zoomed",1)
			"####" A 0 A_ZoomFactor(1.0)
			"####" A 0 A_Takeinventory("ADSmode",1)
			"####" A 0 A_Giveinventory("GoSpecial",1)
			"####" A 0 A_JumpIfInventory("IsStandingStill", 1, "Ready")
			"####" A 0 A_JumpIfInventory("IsTacticalClass", 1, "StartSprint")
			Goto ReadyLoop
				StartSprint:
			SPTN A 0 A_JumpIfInventory("IsPaladin",1,3)
			SMTN A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHTN A 0
			"####" A 1 A_WeaponReady(WRF_NOFIRE)
			"####" A 0 A_Takeinventory("Zoomed",1)
			"####" A 0 A_Takeinventory("ADSmode",1)
			"####" A 0 A_ZoomFactor(1.0)
			"####" A 0 A_JumpIfInventory("UsedStamina", 40, "StopSprintTired")
						// This part has no alternative sprites yet
		Sprinting:
			//SPTN A 0 A_JumpIfInventory("IsPaladin",1,2)	// This must be replaced by the paladin sprinting animation
			STRN A 0
			"####" A 0 offset(-9,32) 
			"####" A 0 offset(-9,32) A_JumpIfInventory("IsStandingStill", 1, "Ready")
			"####" A 0 offset(-9,32) A_JumpIfInventory("UsedStamina", 100, "StopSprintTired")
			"####" A 0 offset(-9,32) ACS_ExecuteAlways(852, 0, 0, 0, 0)//Makes player faster.
			"####" A 0 offset(-9,32) A_JumpIfInventory("PowerStrength", 1, 2)
			"####" A 0 offset(-9,32) A_GiveInventory("UsedStamina", 5)
			"####" A 0 offset(-9,32)
			"####" A 1 offset(-9,34) A_SetPitch(pitch -0.5)
			"####" A 1 offset(-6,36) A_SetPitch(pitch -0.5)
			"####" A 1 offset(-3,38) A_SetPitch(pitch -0.5)
			"####" A 1 offset(0,38) A_SetPitch(pitch -0.5)
			"####" A 1 offset(3,36) A_SetPitch(pitch -0.5)
			"####" A 1 offset(6,34) A_SetPitch(pitch -0.5)
			"####" A 1 offset(9,32) A_SetPitch(pitch -0.5)
			"####" A 0 offset(9,32) A_WeaponReady(WRF_NOBOB)
			"####" A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			"####" A 0 A_JumpIfInventory("Taunting",1,"Taunt")
			"####" A 0 A_JumpIfInventory("Reloading",1,"Reload")
			"####" A 0 offset(-9,32) A_GiveInventory("UsedStamina", 5)
			"####" A 0 offset(9,33) A_SpawnItemEx("FootStep", 0, 0, 2, 0, 0, -4)
			"####" A 1 offset(9,34) A_SetPitch(pitch +0.5)
			"####" A 1 offset(6,36) A_SetPitch(pitch +0.5)
			"####" A 1 offset(3,38) A_SetPitch(pitch +0.5)
			"####" A 1 offset(0,38) A_SetPitch(pitch +0.5)
			"####" A 1 offset(-3,36) A_SetPitch(pitch +0.5)
			"####" A 1 offset(-6,34) A_SetPitch(pitch +0.5)
			"####" A 1 offset(-9,32) A_SetPitch(pitch +0.5)
			"####" A 0 offset(-9,32) A_WeaponReady(WRF_NOBOB)
			"####" A 0 offset(-9,32) A_JumpIfInventory("IsRunning", 1, "Sprinting")
			Goto StopSprint
				StopSprintTired:
			SPTN A 0 A_JumpIfInventory("IsPaladin",1,3)
			SMTN A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHTN A 0
			"####" A 1
			"####" A 0 ACS_ExecuteAlways(853, 0, 0, 0, 0)//Makes player slower.
			"####" A 0 A_PlaySound("Tired", 2)
			"####" A 0 A_TakeInventory("UsedStamina", 2)
					// We're going to add multiple single tick A_WeaponReady functions here, this makes it more responsive -Dino
			"####" AAAAA 1 A_WeaponReady
			"####" A 0 A_TakeInventory("UsedStamina", 2)
			"####" AAAAA 1 A_WeaponReady
			"####" A 0 A_TakeInventory("UsedStamina", 2)
			"####" AAAAA 1 A_WeaponReady
			"####" A 0 A_TakeInventory("UsedStamina", 2)
			"####" AAAAA 1 A_WeaponReady
			"####" A 0 A_TakeInventory("UsedStamina", 2)
			"####" AAAAA 1 A_WeaponReady
			Goto ReadyLoop
				StopSprint:
			//SPTN A 0 A_JumpIfInventory("IsPaladin",1,3)	// This must be replaced by the paladin sprinting animation
			STRN A 0
			"####" A 1
			"####" A 0 A_JumpIfInventory("UsedStamina", 60, "StopSprintTired")
			"####" A 0 ACS_ExecuteAlways(853, 0, 0, 0, 0)//Makes player slower.
			Goto ReadyLoop
				Ready2:
			// This is for Aim down sights
			"####" A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			"####" A 0 A_JumpIfInventory("Taunting",1,"Taunt")
			"####" A 0 A_JumpIfInventory("Reloading",1,"Reload")
			"####" A 0 A_JumpIfInventory("Salute1", 1, "Salute")
			"####" A 0 A_JumpIfInventory("Salute2", 1, "Salute")
			"####" A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
			"####" A 0 A_JumpIfInventory("Unloading",1,"Unload")
			"####" A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
			"####" A 0 A_SetCrosshair(41)
			// Our sprite frame has changed, so we must check again for the paladin
			// class.
			// The sprite for normal shotgun is SPTN or SHTN, but for ADS the new
			// sprite is SPT8 or SHT8.
			//SPT8 A 0 //A_JumpIfInventory("IsPaladin",1,3)
			//SMT8 A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHT8 A 0
			"####" A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			Loop
		Fire:
			// The sprite has changed again, this time it is the firing sprite
			// SPTA or SHTA.
			SPTA A 0 A_JumpIfInventory("IsPaladin",1,3)
			SMTA A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHTA A 0
			"####" A 0 A_Takeinventory("Reloading",1)
			"####" A 0 A_JumpIfInventory("Zoomed",1,"Fire2")
			// We are using a reverse jump function here.
			// What this means, is if we have at least 1 ShotgunAmmo we will jump
			// to the next sprite frame. Goto statements DO NOT count as sprite
			// frames, and will be skipped.
			// ShotgunAmmo is for shells that are loaded into the shotgun.
			"####" A 0 A_JumpIfInventory("ShotgunAmmo",1,1)
			Goto Reload
			"####" A 0 A_ZoomFactor(0.96)	// This is where we land if we have ammo.
			"####" A 0 A_JumpIfInventory("ShotgunWasEmpty", 1, "Pump2")
			"####" A 0 A_AlertMonsters
			"####" A 0 A_PlaySound("weapons/sg", 1)
			"####" AA 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0)
			"####" A 0 A_FireCustomMissile("DistantFireSoundShotgun", random(-1,1), 0, 0, -12, 0, random(-1,1))
			"####" A 0
			"####" AA 0 A_FireCustomMissile("YellowFlareSpawn",0,0,0,0)
			"####" A 0 A_SpawnItemEx("PlayerMuzzle1",30,5,30)
			"####" AAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-3,3), 0, 0, -12, 0, random(-3,3))
			"####" A 0 A_Takeinventory("ShotgunAmmo",1)
			"####" A 0 A_FireBullets (3, 3, 10, 12, "ShotgunPuff", FBF_NORANDOM)
			"####" A 1 BRIGHT
			"####" A 0 A_SetPitch(-6.0 + pitch)
			"####" B 1 BRIGHT
			"####" AA 0 A_FireCustomMissile("YellowFlareSpawn",0,0,0,0)
			"####" A 0 A_ZoomFactor(1.00)
			"####" C 1 A_SetPitch(+1.0 + pitch)
			"####" DE 1 A_SetPitch(+1.0 + pitch)
			"####" A 0 A_SetPitch(+3.0 + pitch)
			Goto Pump1
				Pump1:
			SPTN A 0 A_JumpIfInventory("IsPaladin",1,3)
			SMTN A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHTN A 0
			"####" A 0
			"####" A 0 A_GiveInventory ("Pumping", 1)
			"####" A 0 A_GiveInventory ("GoSpecial", 1)
			"####" BCD 1
			"####" A 0 A_SetCrosshair(41)
			"####" EFG 1
			"####" A 0 A_FireCustomMissile("ShotCaseSpawn",40,0,-8,-26)
			"####" H 1 A_PlaySound("weapons/sgpump", 3)
			"####" IJ 1
			"####" A 0 A_JumpIfInventory("ShotgunAmmo",1,3)
			"####" A 0 A_JumpIfInventory("TurboReload", 1, 2)
			"####" A 0 A_Giveinventory("ShotgunWasEmpty",1)
			// DO NOT use frame based goto statements! Always try to create a name
			// for where you want to jump, such as "ReloadNormally"
			Goto ReloadNormally
			//Goto Reload+18		// This is a frame based jump statement, DO NOT do this.
			"####" KL 1
			"####" KJIH 1
			"####" A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
			"####" A 0 A_Takeinventory("ShotgunWasEmpty",1)
			"####" GFEDC 1 A_JumpIfInventory("Kicking",1,"DoKick")
			//"####" A 0 A_JumpIfInventory("ShotgunAmmo",1,2)
			"####" A 0 A_JumpIfInventory("TurboReload", 1, "TurboReload")
			Goto ReadyToFireAgain
		Pump2:
			SPTN A 0 A_JumpIfInventory("IsPaladin",1,3)
			SMTN A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHTN A 0
			"####" A 0 A_GiveInventory ("Pumping", 1)
			"####" A 0 A_GiveInventory ("GoSpecial", 1)
			"####" A 0 A_TakeInventory("Reloading", 1)
			"####" A 0 A_Takeinventory("Zoomed",1)
			"####" A 0 A_ZoomFactor(1.0)
			"####" FG 1
			"####" H 1 A_PlaySound("weapons/sgpump", 3)
			"####" IJ 1
			"####" KL 1
			"####" KJIH 1
			"####" A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
			"####" A 0 A_Takeinventory("ShotgunWasEmpty",1)
			"####" GFEDC 1 A_JumpIfInventory("Kicking",1,"DoKick")
			Goto ReadyToFireAgain
					// Resets the shotgun back to its normal position before firing.
		ReadyToFireAgain:
			SPTN A 0 A_JumpIfInventory("IsPaladin",1,3)
			SMTN A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHTN A 0
			"####" A 1 Offset(10,36) // <-- New frames
			"####" A 1 Offset(9,40) //
			"####" A 1 Offset(4,40) //
			"####" A 1 Offset(0,32) //
			"####" A 0 A_Refire
			"####" A 0 //A_Refire
			Goto ReadyLoop
				Fire2:
			//SPT8 A 0 A_JumpIfInventory("IsPaladin",1,3)
			//SMT8 A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHT8 A 0 
			"####" A 0 A_Takeinventory("Reloading",1)
			"####" A 0 A_JumpIfInventory("ShotgunAmmo",1,2)
			Goto Reload
			"####" A 0 A_JumpIfInventory("ShotgunWasEmpty", 1, "Pump2")
			"####" A 0 A_AlertMonsters
			"####" AA 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 2, 0, 0)
			"####" A 0 A_PlaySound("weapons/sg", 1)
			"####" A 0
			"####" A 0 A_SpawnItemEx("PlayerMuzzle1",30,0,45)
			"####" A 0 A_FireBullets (3, 3, 10, 12, "ShotgunPuff", FBF_NORANDOM)
			"####" A 0 A_FireCustomMissile("DistantFireSoundShotgun", random(-1,1), 0, 0, -12, 0, random(-1,1))
			"####" AAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-5,5), 0, 0, 0, 0, random(-5,5))
			"####" A 0 A_SetPitch(-10.0 + pitch)
			"####" A 0 A_Takeinventory("ShotgunAmmo",1)
			"####" A 0 A_SetAngle(random(4, -4) + angle)
			"####" F 1 BRIGHT A_SetPitch(+2.0 + pitch)
			"####" GHIA 1 A_SetPitch(+2.0 + pitch)
			"####" A 1	
			"####" A 0 A_GiveInventory ("Pumping", 1)
			"####" JKLM 1
			"####" A 0 A_FireCustomMissile("ShotCaseSpawn",40,0,14,0)
			"####" A 0 A_PlaySound("weapons/sgpump")
			   // I think here you wanted the paladin to take twice as long to pump
		   // but instead made the marine take double time to pump.
		   // This makes the animation and sound fail to line up and looks/sounds
		   // terrible, so I'm going to make them both take the same amount of time.
		   //
		   // If you insist on making the paladin take double time to pump, I may
		   // be able to adjust the sound to sync up with the animation, but this
		   // is very bad practice. -Dino
			   //SHT8 NOONMLKJ 2
				"####" NOONMLKJ 1
			"####" A 2
			"####" A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
			"####" A 0 A_JumpIfInventory("FiredSecondary",1,"HoldAim")//If still pressing alt fire, it means its holding aim
			"####" A 0 A_Refire
			"####" A 1
			Goto Ready2
			AltFire:
			//SPT8 A 0 A_JumpIfInventory("IsPaladin",1,3)
			//SMT8 A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHT8 A 0
			"####" A 0 A_Giveinventory("GoSpecial",1)
			"####" A 0 A_JumpIfInventory("Zoomed",1,"StopADS")
			"####" A 0 A_Giveinventory("Zoomed",1)
			"####" A 0 A_ZoomFactor(1.2)
			"####" A 0 A_SetCrosshair(41)
			"####" A 0 A_Giveinventory("ADSmode",1)
			"####" E 2
			"####" A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
			"####" A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			"####" A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
			"####" A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			"####" A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
			"####" A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			"####" A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
			"####" A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			"####" A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
			"####" A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			"####" A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
			"####" A 2 A_WeaponReady(WRF_ALLOWRELOAD)
			"####" A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
			"####" A 0 A_JumpIfInventory("FiredSecondary",1,"HoldAim")
			Goto Ready2
					HoldAim:
			//SPT8 A 0 A_JumpIfInventory("IsPaladin",1,3)
			//SMT8 A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHT8 A 0
			"####" A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
			"####" A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			"####" A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
			"####" A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			"####" A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
			"####" A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			"####" A 0 A_JumpIfInventory("FiredSecondary",1,"HoldAim")
				StopADS:
			"####" A 0 A_Takeinventory("Zoomed",1)
			"####" A 0 A_ZoomFactor(1.0)
			"####" A 0 A_Takeinventory("ADSmode",1)
			"####" A 0 A_Giveinventory("GoSpecial",1)
			"####" D 2
			Goto ReadyLoop
				WarmUp:
			"####" A 0
			"####" A 0 A_TakeInventory ("NeverSelectedShotgun", 1)
			"####" A 0 A_TakeInventory("Reloading", 1)
			"####" A 0 A_Takeinventory("Zoomed",1)
			"####" A 0 A_ZoomFactor(1.0)
			SPSS A 0 A_JumpIfInventory("IsPaladin",1,3)
			SHSS A 0 
			"####" EFGHIJKLM 1
			SPTN A 0 A_JumpIfInventory("IsPaladin",1,3)
			SMTN A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHTN A 0
			"####" FG 1
			"####" H 1 A_PlaySound("weapons/sgpump", 3)
			"####" IJ 1
			"####" KL 1
			"####" KJIH 1
			"####" A 0 A_Takeinventory("ShotgunWasEmpty",1)
			"####" GFEDC 1 A_JumpIfInventory("Kicking",1,"DoKick")
			Goto ReadyToFireAgain	
				Reload:
			SPTN A 0 A_JumpIfInventory("IsPaladin",1,3)
			SMTN A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHTN A 0
			"####" A 0
			"####" A 0 A_TakeInventory("Reloading", 1)
			"####" A 0 A_Takeinventory("Zoomed",1)
			"####" A 0 A_ZoomFactor(1.0)
			"####" A 0 A_TakeInventory("ShotgunWasEmpty", 1)
			"####" A 1 A_WeaponReady
			//"####" A 0 A_JumpIfInventory("ShotgunAmmo",8,"Pump2")	// This is cooler. -Dino
			"####" A 0 A_JumpIfInventory("ShotgunAmmo", 1, "ReloadNormally")
			"####" A 0 A_GiveInventory("ShotgunWasEmpty", 1)
		ReloadNormally:	
			"####" A 0 A_JumpIfInventory("AmmoShell",1,1)
			Goto ReadyLoop
			"####" AA 0
			"####" A 0 A_JumpIfInventory("TurboReload", 1, "TurboReload")
			"####" B 1 
			"####" A 0 A_GiveInventory ("Pumping", 1)
			"####" CDE 1 A_Takeinventory("FiredSecondary",1)
		ReloadContinue:
			"####" A 0 A_JumpIfInventory("AmmoShell",1,1)
			Goto ReloadEnd
			"####" A 0 A_GiveInventory ("Pumping", 1)
			"####" A 0 A_JumpIfInventory("ShotgunWasEmpty",1,3)
			"####" A 0 A_JumpIfInventory("ShotgunAmmo",9,"ReloadEnd")
			"####" A 0 A_Jump(256,2)
			"####" A 0 A_JumpIfInventory("ShotgunAmmo",8,"ReloadEnd")// Fuck frame based jump states. -Dino
			//"####" A 0 A_JumpIfInventory("AmmoShell",0,23)			// This is a frame based jump, DO NOT DO THIS! -Dino
			"####" A 0 A_Giveinventory("ShotgunAmmo",1)
			"####" A 0 A_Takeinventory("AmmoShell",1)
			SPHR A 0 A_JumpIfInventory("IsPaladin",1,3)
			SSMR A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SSHR A 0
			"####" AAAABBC 1
			"####" A 0 A_jumpIfInventory("IsPaladin",1,"PallyInsertShell")
			"####" A 0 A_jumpIfInventory("IsSorcerer",1,"SorcyInsertShell")
			"####" D 1 A_PlaySound("insertshell")
			"####" EF 1 A_WeaponReady(WRF_NOBOB)
		InsertShellContinue:
			"####" A 0 A_JumpIfInventory("Reloading", 1, "Pump2")
			"####" A 0 A_JumpIfInventory("Kicking",1,"DoKickReloading")
			"####" A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
			Goto ReloadContinue
				ReloadEnd:
			SPTN A 0 A_JumpIfInventory("IsPaladin",1,3)
			SMTN A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHTN A 0
			"####" A 0 A_JumpIfInventory("ShotgunWasEmpty", 1, "Pump2")
			"####" FEDCBA 1 A_WeaponReady
			"####" A 0 A_Takeinventory("Reloading",1)
			"####" A 0 //A_Giveinventory("SGFullReloaded",1)
			Goto ReadyLoop
			SorcyInsertShell:
			SSMR D 2 A_PlaySound("insertshell")
			SSMR EF 2 A_WeaponReady(WRF_NOBOB)
			Goto InsertShellContinue
			PallyInsertShell:
			SPHR D 2 A_PlaySound("insertshell")
			SPHR EF 2 A_WeaponReady(WRF_NOBOB)
			Goto InsertShellContinue
			 TurboReload:
			SPSS A 0 A_JumpIfInventory("IsPaladin",1,2)
			SMSS A 0 A_JumpIfInventory("IsSorcerer",1,1)
			Goto TurboBullets
			SPSS BC 1
		TurboBullets:	
			"####" A 0
			"####" A 0 A_JumpIfInventory("ShotgunAmmo",8,"FinishTurboReload")
			"####" A 0 A_JumpIfInventory("AmmoShell",1,1)
			Goto FinishTurboReload
			"####" A 0 A_Giveinventory("ShotgunAmmo",1)
			"####" A 0 A_Takeinventory("AmmoShell",1)
			Goto TurboBullets
		FinishTurboReload:
			SPTN A 0 A_JumpIfInventory("IsPaladin",1,3)
			SMTN A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHTN A 0
			"####" A 1 A_Refire
			Goto ReadyLoop		
			Unload:
			SPTN A 0 A_JumpIfInventory("IsPaladin",1,3)
			SMTN A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHTN A 0
			"####" A 1
			"####" A 0 A_ZoomFactor(1.0)
			"####" A 0 A_Takeinventory("Unloading",1)
			"####" A 0 A_Takeinventory("ADSmode",1)
			"####" A 0 A_Takeinventory("Zoomed",1)
			"####" A 0 A_GiveInventory("ShotgunWasEmpty", 1)
			"####" A 0 A_JumpIfInventory("ShotgunAmmo",1,1)
			Goto OkToFire
			"####" A 0 A_Takeinventory("Zoomed",1)
			"####" A 0 A_GiveInventory ("Pumping", 1)
			"####" A 0 A_Takeinventory("Unloading",1)
			"####" ABCDEF 1
				RemoveBullets:
			"####" A 0 A_JumpIfInventory("ShotgunAmmo",1,1)
			Goto FinishUnload
			"####" A 0 A_Takeinventory("ShotgunAmmo",1)
			"####" A 0 A_Giveinventory("AmmoShell",1)
			"####" A 0 A_JumpIfInventory("IsPaladin",1,"PallyRemoveBullets")
			"####" A 0 A_JumpIfInventory("IsSorcerer",1,"SorcyRemoveBullets")
			SHTN G 1
			SHTN H 1 A_PlaySound("weapons/sgpump", 3)
			SHTN IJ 1
			SHTN KL 1
			SHTN KJIH 1
			"####" A 0 A_Giveinventory("ShotgunWasEmpty",1)
			SHTN GF 1
			Goto RemoveBullets
			SorcyRemoveBullets:
			SMTN G 2
			SMTN H 2 A_PlaySound("weapons/sgpump", 3)
			SMTN IJ 2
			SMTN KL 2
			SMTN KJIH 2
			"####" A 0 A_Giveinventory("ShotgunWasEmpty",1)
			SMTN GF 2
			Goto RemoveBullets
			PallyRemoveBullets:
			SPTN G 2
			SPTN H 2 A_PlaySound("weapons/sgpump", 3)
			SPTN IJ 2
			SPTN KL 2
			SPTN KJIH 2
			"####" A 0 A_Giveinventory("ShotgunWasEmpty",1)
			SPTN GF 2
			Goto RemoveBullets
			FInishUnload:
			SPTN A 0 A_JumpIfInventory("IsPaladin",1,3)
			SMTN A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SHTN A 0
			"####" EDCBA 1
			"####" A 0 A_Takeinventory("Unloading",1)
			Goto OkToFire	
					// We need a new kick animation for the paladin, marine kick looks bad on the wrong player.
		DoKickReloading:
			NULL A 0 A_JumpIf (momZ > 0, "AirKick")
			NULL A 0 A_JumpIf (momZ < 0, "AirKick")
			"####" A 0 A_PlaySound("KICK")
			"####" A 0 SetPlayerProperty(0,1,0)
			KICK BCD 1
			"####" A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -7)
			KICK H 3
			KICK A 0 A_Takeinventory("Kicking",1)
			KICK I 1
			KICK GFEDCBA 1 
			"####" A 0 A_Takeinventory("Kicking",1)
			"####" A 0 SetPlayerProperty(0,0,0)
			Goto ReloadNormally
				GoingToReady:
			"####" A 1
			Goto ReadyLoop
				SpellFlash:
			SMTN ABCDEEFFFFFFFFFFFFFFEEDDCBAA 1
			stop
		}
	}
	ACTOR ShotgunAmmo : Ammo
	{
	   Inventory.Amount 0
	   Inventory.MaxAmount 9
	   Ammo.BackpackAmount 0
	   Ammo.BackpackMaxAmount 9
	   Inventory.Icon "SHTCA0"
	}
	/*
	ACTOR ShotGunFrost : Shot_Gun
	{
	  States
	  {
			TossGrenade:	
			"----" A 2
			"----" A 0 A_TakeInventory("TossGrenade", 1)
			"----" AAAAA 0
			TNT1 A 0 A_GunFlash("GrenadeFlash")
			"----" A 2
			"----" A 0 A_Takeinventory("HasPlasmaWeapon",1)
			TNT1 A 0 A_TAkeinventory("HasCutingWeapon",1)
			TNT1 A 0 A_Takeinventory("Zoomed",1)
			TNT1 A 0 A_Takeinventory("PowerLightAmp",1)
			TNT1 A 0 A_ZoomFactor(1.0)
			TNT1 A 0 A_Takeinventory("ADSmode",1)
			TNT1 A 0 A_Giveinventory("HasFreezerWeapon",1)
			TNT1 A 0 A_JumpIfInventory("IsPlayingAsPurist", 1, "TossGrenadeClassic")
			QKFR A 2
			TNT1 A 0 A_GiveInventory("FiredGrenade", 1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_Giveinventory("GoSpecial",1)
			QKFR BBCCDDE 1
			TNT1 A 0 A_PlaySound("FRZFIRE2")
			QKFR E 3 A_FireCustomMissile("QuickFreezerBall",0,0,0,0)
			QKFR EFGH 2 
			TNT1 A 3 
			TNT1 A 0 A_TakeInventory("TossGrenade", 1)
			TNT1 A 0 A_Takeinventory("HasFreezerWeapon",1)
			Goto GoingToReady	
					GrenadeFlash:
			SHTN ABCDEEFFFFFFFFFFFFFFEEDDCBAA 1
			stop
			}
		}
	*/