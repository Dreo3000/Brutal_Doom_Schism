	ACTOR DUalPlasmaRifles : BrutalWeapon
	{
		Weapon.AmmoUse1 0
		Weapon.AmmoGive1 0
		Weapon.AmmoUse2 0
		Weapon.AmmoGive2 0
		Weapon.AmmoType1 "AmmoCell"
		Weapon.AmmoType2 "DoublePlasmaGunzAmmo"
		Obituary "%o was shot down by %k's SMG."
		AttackSound "None"
		Inventory.PickupSound "CLIPIN"
		Inventory.Pickupmessage "You got the SMG! (Slot 2)"
		+WEAPON.NOAUTOAIM
		//+WEAPON.NOAUTOFIRE
		+FORCEXYBILLBOARD
		+WEAPON.NO_AUTO_SWITCH
		Scale 0.9
		Tag "Dual Plasma Guns"
		States
		{
				Spawn:
		TNT1 A 100//Pickup sprite
		Loop
			Ready:
		SelectAnimation:
			TNT1 A 0
			TNT1 A 0 A_PlaySound("PLSDRAW", 1)
			PLRS AB 1
			TNT1 A 0 A_TakeInventory("StopDualWield", 1)
			TNT1 A 0 A_PlaySound("PLSDRAW", 3)
			PLRS CDEF 1
			TNT1 A 0 A_GunFlash
			Goto ReadyToFire
			Fire:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("FiredPrimary",1,"FireLeftGun") //Check if player wants to reload
		DPR2 A 1 //A_WeaponReady(WRF_NOFIRE)
		TNT1 A 0 A_JumpIfInventory("FiredPrimary",1,"FireLeftGun") //Check if player wants to reload
		TNT1 A 0 A_Refire
		Goto ReadyToFire
			ReadyToFire:
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("FiredPrimary",1,"FireLeftGun") //Check if player wants to reload
			DPR2 A 1 A_WeaponReady// Weapon is ready to fire
			//TNT1 A 0 A_JumpIfInventory("IsFiringSecondary", 1, 1)
			//TNT1 A 0 A_GunFlash
			TNT1 A 0 A_JumpIfInventory("FiredPrimary",1,"FireLeftGun") //Check if player wants to reload
			TNT1 A 0 A_JumpIfInventory("Reloading",1,"Reload2") //Check if player wants to reload
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
			TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
			TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
			TNT1 A 0 A_JumpIfInventory("Unloading",1,"Unload")
			TNT1 A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
			DURI A 0 A_JumpIfInventory("StartDualWield",1,"DualWield")
			Loop
					DualWield:
			DURI A 0
			DURI A 0 A_Takeinventory("StartDualWield",1)
			DURI A 0 A_SelectWEapon("Plasma_Gun")
			Goto Ready
				Deselect:
			TNT1 AAAAAA 0 A_Lower
			TNT1 A 0 A_TakeInventory("TossGrenade", 1)
			TNT1 A 1 A_Lower //Makes player switch weapons faster
			Wait
		Select:
			TNT1 A 0 A_Raise //Makes the weapon always be selected fast
			Wait
			DryFire:
			P2W2 A 0 A_PlaySound("DRYFIRE", 1)
			DPR2 A 10
			Goto ReadyToFire
			FireLeftGun:
			P2W2 A 0
			TNT1 A 0 A_JumpIfInventory("DoublePlasmaGunzAmmo", 1, 1)//First of all, checks if there is ammo inside the gun
			Goto Reload//Couldn't find any ammo. Reload
					TNT1 A 0 A_JumpIfInventory("LeftPlasmaGunAmmo", 1, 1)//Checks if there is ammo inside the left Rifle
			Goto DryFire//Couldn't find any ammo. Don't fire.
					TNT1 A 0 A_TakeInventory("DoublePlasmaGunzAmmo", 1)//Removes 1 ammo from magazine
			TNT1 A 0 A_AlertMonsters
	tnt1 a 0 A_FireCustomMissile("PlasmaFlareSpawn", 12, 0, 0, 0)
	PLSN A 0 A_PlaySound("PLSM9", 1)
			DPR2 B 1 BRIGHT A_FireCustomMissile("Plasma_Ball", random(-4, 8), 1, -8, -3, 0, random(-3, 3))
			TNT1 A 0 A_SetPitch(+0.6 + pitch)//Vertical recoil up
			DPR2 C 1 
			P2W2 C 0 A_SetPitch(-0.6 + pitch)//Vertical recoil down
			DPR2 D 1 A_TakeInventory("LeftPlasmaGunAmmo", 1)//Remove the fake ammo
			DPR2 E 1
			TNT1 A 0 A_JumpIfInventory("DoublePlasmaGunzAmmo", 1, 1)//Checks if there is ammo inside the gun
			Goto Reload//Couldn't find any ammo. Reload.
			DPR2 C 1
			TNT1 A 0 A_JumpIfInventory("LeftPlasmaGunAmmo", 1, 1)//Checks if there is ammo inside the left Rifle
			Goto DryFire//Couldn't find any ammo. Don't fire.
			TNT1 A 0 A_JumpIfInventory("FiredPrimary",1,"FireLeftGun") //Check if player still is firing left gun
			P2W2 A 0
			Goto Fire//No need to reload. Get back to Ready state.
				Flash:	
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("StopDualWield", 1, "LightDone")
			TNT1 A 0 A_JumpIfInventory("TossGrenade", 1, "GoAway")
			DPR1 A 1
			TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "FireRightGun")
			TNT1 A 0 A_JumpIfInventory("StartDualWield",1,"GoAway")
			Loop
			GoAway:
			TNT1 A -1
			Stop
			DontFlash:
			TNT1 A 1
			Goto Flash
		FireRightGun:
			P2W1 A 0
					TNT1 A 0 A_JumpIfInventory("StopDualWield", 1, "LightDone")
			TNT1 A 0 A_GiveInventory("IsFiringSecondary", 1)
			TNT1 A 0 A_JumpIfInventory("DoublePlasmaGunzAmmo", 1, 2)//First of all, checks if there is ammo inside the gun
			TNT1 A 0 //A_GiveInventory("Reloading", 1)//Couldn't find any ammo. Reload
			Goto Flash//Couldn't find any ammo. Reload
					TNT1 A 0 A_JumpIfInventory("PlasmaAmmo", 1, 1)//Checks if there is ammo inside the left Rifle
			Goto DryFire2//Couldn't find any ammo. Don't fire.
					TNT1 A 0 A_TakeInventory("DoublePlasmaGunzAmmo", 1)//Removes 1 ammo from magazine
					TNT1 A 0 A_AlertMonsters
			RIFF A 0 A_FireCustomMissile("PlasmaFlareSpawn", -12, 0, 0, 0)
	PLSN A 0 A_PlaySound("PLSM9", 1)
			DPR1 B 1 BRIGHT A_FireCustomMissile("Plasma_Ball", random(-8, 4), 1, 8, -3, 0, random(-3, 3))
			TNT1 A 0 A_SetPitch(+0.6 + pitch)//Vertical recoil up
			DPR1 a 1
			P2W1 C 0 A_SetPitch(-0.6 + pitch)//Vertical recoil down
			DPR1 D 1 A_TakeInventory("PlasmaAmmo", 1)//Remove the fake ammo
			DPR1 E 1
			P2W1 A 0
			TNT1 A 0 A_JumpIfInventory("DoublePlasmaGunzAmmo", 1, 3)//Checks if there is ammo inside the gun
			TNT1 A 0 //A_GiveInventory("Reloading", 1)//Couldn't find any ammo. Reload
			TNT1 A 0 A_JumpIfInventory("PlasmaAmmo", 1, 1)//Checks if there is ammo inside the right Rifle
			Goto DryFire2//Couldn't find any ammo. Don't fire.
			DPR1 A 1
			TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "FireRightGun")
			Goto Flash
					AltFire:
			TNT1 A 0
			Goto Fire
		DryFIre2:
			DPR1 A 1 A_PlaySound("DRYFIRE", 1)
			DPR1 AAAAAAAAAAAA 1 A_JumpIfInventory("StopDualWield", 1, "LightDone")
			Goto Flash
				TossGrenade:
			PLRS FEDCBA 1
			TNT1 A 0 A_SetCrosshair(41)
			WTFL A 0 A_JumpIfInventory("IsPaladin",1,"PallyGrenadeToss")
			TNT1 A 0 A_TakeInventory("TossGrenade", 1)
			TNT1 A 0 A_JumpIfInventory("GrenadeAmmo", 1, 3)
			TNT1 A 0 A_Print("No Grenades Left.")
			//TNT1 A 0 A_Jump(256, "Ready")
			Goto SelectAnimation
			GRTH ABCD 1
			TNT1 A 0 A_GiveInventory("FiredGrenade", 1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_Giveinventory("GoSpecial",1)
			TNT1 A 0 A_PLaySound ("GRNPIN")
			GRTH EEFG 1
			TNT1 A 0 A_PLaySound ("GRNTOSS")
			GRTH HI 1
			TNT1 A 0 A_TakeInventory("GrenadeAmmo", 1)
			TNT1 A 0 A_FireCustomMissile("HandGrenade", random(-2,2), 0, 0, 0, 0, 0)
			TNT1 A 0 A_TakeInventory("FiredGrenade", 1)
			GRTH JKLM 1
			TNT1 A 1
			TNT1 A 0 A_TakeInventory("TossGrenade", 1)
			Goto SelectAnimation
		PallyGrenadeToss:
			TNT1 A 0 A_TakeInventory("TossGrenade", 1)
			TNT1 A 0 A_JumpIfInventory("GrenadeAmmo", 1, 1)
			Goto PallyNoGrenade
			TNT1 A 0 A_GiveInventory("FiredGrenade", 1)
			TNT1 A 0 A_PLaySound ("GRNPIN")
			TNT1 A 4 //wait a moment
			WTFL ABCDEF 1
			TNT1 A 0 A_PLaySound ("GRNTOSS")
			TNT1 A 0 A_TakeInventory("GrenadeAmmo", 1)
			TNT1 A 0 A_FireCustomMissile("HandGrenade", random(-2,2), 0, 0, 0, 0, 0)
			TNT1 A 0 A_TakeInventory("FiredGrenade", 1)
			WTFL GHIJKL 1
			Goto SelectAnimation
		PallyNoGrenade:
			TNT1 A 0 A_Print("No Grenades Left.")
			//TNT1 A 0 A_Jump(256, "GoingToReady")
			Goto SelectAnimation
				Reload:
					DPR2 A 1 //Always leave one free line before the reload animation to prevent bugs
			TNT1 A 0 A_TakeInventory("Reloading")//Always put this to make sure that the game understand that you already are reloading your weapon, and calling this state again is not necessary
			TNT1 A 0 A_JumpIfInventory("DoublePlasmaGunzAmmo", 100, "ReadytoFire")//Checks if the weapon is not fully reloaded, if yes, cancel reload.
			TNT1 A 0 A_PlaySound("DRYFIRE", 1)
			TNT1 A 0 A_JumpIfInventory("AmmoCell", 1, 1)//Checks if you have spare ammo
			Goto DryFire//Identified that you have no spare ammo. Get back to Ready animation
			TNT1 A 0 A_GiveInventory("StopDualWield", 1)
				Refill:	
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("AmmoCell", 1, 1)//Check if you have spare ammo again. This line is necessary in case you don't have enough ammo to fill an entire clip.
			Goto FinishReload//Gun is fully loaded. Go to finish animation
			TNT1 A 0 A_TakeInventorY("AmmoCell", 1)//Removes one spare bullet
			TNT1 A 0 A_GiveInventory("DoublePlasmaGunzAmmo", 1)//Puts one bullet inside the clip
			TNT1 A 0 A_JumpIfInventory("DoublePlasmaGunzAmmo", 100, "FinishReload")//Checks if weapons is full
			Loop
				 FinishReload:	//Weapon is fully loaded. Time to play the reloading animation.
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("LeftPlasmaGunAmmo", 50, "FinishReloadRightOnly")
			TNT1 A 0 A_JumpIfInventory("PlasmaAmmo", 50, "FinishReloadLeftOnly")
			TNT1 A 0 A_GiveInventory("LeftPlasmaGunAmmo", 50)
			TNT1 A 0 A_GiveInventory("PlasmaAmmo", 50)
			PLSN A 0 A_PlaySound("BEP")
			TNT1 A 5
			TNT1 A 0 A_PlaySound("PLREADY", 1)//reload sound
			TNT1 A 0 A_JumpIfInventory("HasUnloaded", 1, 2)
			TNT1 A 0 A_FireCustomMissile("EmptyClipSpawn",185,0,8,-4)
			P2SR CDEEEEEEEEEEEEEEEF 1
			P2SR GHHIIIJJJJJJJJIKLB 1
			PLSN A 0 A_PlaySound("BEP")
			TNT1 A 10
			TNT1 A 0 A_PlaySound("PLREADY", 1)//reload sound
			TNT1 A 0 A_JumpIfInventory("HasUnloaded", 1, 2)
			TNT1 A 0 A_FireCustomMissile("EmptyClipSpawn",-5,0,8,-4)
			PLSR CDEEEEEEEEEEEEEEEF 1
			PLSR GHHIIIJJJJJJJJIKLB 1
			TNT1 A 0 A_TakeInventory("StopDualWield", 1)
			TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
			TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
			TNT1 A 5
			TNT1 A 0 A_TakeInventory("Reloading")//Always put this to make sure that the game understand that you already are reloading your weapon, and calling this state again is not necessary
			TNT1 A 0 A_GunFlash
			TNT1 A 0 A_Takeinventory("HasUnloaded",1)
			Goto ReadyToFire
					//Reload 2 is for manual reload, leaves one more bullet inside the gun.
				Reload2:
			DPR2 A 1 //Always leave one free line before the reload animation to prevent bugs
			TNT1 A 0 A_TakeInventory("Reloading")//Always put this to make sure that the game understand that you already are reloading your weapon, and calling this state again is not necessary
			TNT1 A 0 A_JumpIfInventory("DoublePlasmaGunzAmmo", 100, "ReadytoFire")//Checks if the weapon is not fully reloaded, if yes, cancel reload.
			TNT1 A 0 A_JumpIfInventory("AmmoCell", 1, 1)//Checks if you have spare ammo
			Goto ReadyToFire//The game identified that you have no spare ammo. Get back to Ready animation
			TNT1 A 0 A_GiveInventory("StopDualWield", 1)
				Refill2:	
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("AmmoCell", 1, 1)//Check if you have spare ammo again. This line is necessary in case you don't have enough ammo to fill an entire clip.
			Goto FinishReload//Gun is fully loaded. Go to finish animation
			TNT1 A 0 A_TakeInventorY("AmmoCell", 1)//Removes one spare bullet
			TNT1 A 0 A_GiveInventory("DoublePlasmaGunzAmmo", 1)//Puts one bullet inside the clip
			TNT1 A 0 A_JumpIfInventory("DoublePlasmaGunzAmmo", 100, "FinishReload2")//Checks if weapons is full
			Loop
				FinishReload2:	//Weapon is fully loaded. Time to play the reloading animation.
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("LeftPlasmaGunAmmo", 50, "FinishReloadRightOnly")
			TNT1 A 0 A_JumpIfInventory("AmmoCell", 50, "FinishReloadLeftOnly")
			TNT1 A 0 A_GiveInventory("LeftPlasmaGunAmmo", 100)
			TNT1 A 0 A_GiveInventory("AmmoCell", 100)
			PLSN A 0 A_PlaySound("BEP")
			TNT1 A 5
			TNT1 A 0 A_PlaySound("PLREADY", 1)//reload sound
			TNT1 A 0 A_JumpIfInventory("HasUnloaded", 1, 2)
			TNT1 A 0 A_FireCustomMissile("PlasmaCaseSpawn",185,0,8,-4)
			P2SR CDEEEEEEEEEEEEEEEF 1
			P2SR GHHIIIJJJJJJJJIKLB 1
			PLSN A 0 A_PlaySound("BEP")
			TNT1 A 10
			TNT1 A 0 A_PlaySound("PLREADY", 1)//reload sound
			TNT1 A 0 A_JumpIfInventory("HasUnloaded", 1, 2)
			TNT1 A 0 A_FireCustomMissile("PlasmaCaseSpawn",-5,0,8,-4)
			PLSR CDEEEEEEEEEEEEEEEF 1
			PLSR GHHIIIJJJJJJJJIKLB 1
			TNT1 A 0 A_TakeInventory("StopDualWield", 1)
			TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
			TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
			TNT1 A 5
			TNT1 A 0 A_TakeInventory("Reloading")//Always put this to make sure that the game understand that you already are reloading your weapon, and calling this state again is not necessary
			TNT1 A 0 A_GunFlash
			TNT1 A 0 A_Takeinventory("HasUnloaded",1)
			Goto ReadyToFire	
				FinishReloadLeftOnly:	//Weapon is fully loaded. Time to play the reloading animation.
			TNT1 A 0 A_GiveInventory("LeftPlasmaGunAmmo", 100)
			TNT1 A 0 A_GiveInventory("PlasmaAmmo", 100)
			PLSN A 0 A_PlaySound("BEP")
			TNT1 A 5
			TNT1 A 0 A_PlaySound("PLREADY", 1)//reload sound
			TNT1 A 0 A_JumpIfInventory("HasUnloaded", 1, 2)
			TNT1 A 0 A_FireCustomMissile("PlasmaCaseSpawn",185,0,8,-4)
			P2SR CDEEEEEEEEEEEEEEEF 1
			P2SR GHHIIIJJJJJJJJIKLB 1
			TNT1 A 0 A_TakeInventory("StopDualWield", 1)
			TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
			TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
			TNT1 A 5
			TNT1 A 0 A_TakeInventory("Reloading")//Always put this to make sure that the game understand that you already are reloading your weapon, and calling this state again is not necessary
			TNT1 A 0 A_GunFlash
			TNT1 A 0 A_Takeinventory("HasUnloaded",1)
			Goto ReadyToFire	
				FinishReloadRightOnly:	//Weapon is fully loaded. Time to play the reloading animation.
			TNT1 A 0 A_GiveInventory("LeftPlasmaGunAmmo", 100)
			TNT1 A 0 A_GiveInventory("PlasmaAmmo", 100)
			PLSN A 0 A_PlaySound("BEP")
			TNT1 A 5
			TNT1 A 0 A_PlaySound("PLREADY", 1)//reload sound
			TNT1 A 0 A_JumpIfInventory("HasUnloaded", 1, 2)
			TNT1 A 0 A_FireCustomMissile("PlasmaCaseSpawn",-5,0,8,-4)
			PLSR CDEEEEEEEEEEEEEEEF 1
			PLSR GHHIIIJJJJJJJJIKLB 1
			TNT1 A 0 A_TakeInventory("StopDualWield", 1)
			TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
			TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
			TNT1 A 5
			TNT1 A 0 A_TakeInventory("Reloading")//Always put this to make sure that the game understand that you already are reloading your weapon, and calling this state again is not necessary
			TNT1 A 0 A_GunFlash
			TNT1 A 0 A_Takeinventory("HasUnloaded",1)
			Goto ReadyToFire		
					CheckSprint:
			DURI A 1 A_WeaponReady(WRF_NOFIRE)
			TNT1 A 0 A_JumpIfInventory("IsStandingStill", 1, "Ready3")
			TNT1 A 0 A_JumpIfInventory("IsTacticalClass", 1, "StartSprint")
			Goto Ready3
				StartSprint:
			DURI A 1 A_WeaponReady(WRF_NOFIRE)
			TNT1 A 0 A_Takeinventory("Zoomed",1)
			TNT1 A 0 A_Takeinventory("ADSmode",1)
			TNT1 A 0 A_ZoomFactor(1.0)
			TNT1 A 0 A_JumpIfInventory("UsedStamina", 40, "StopSprintTired")
				Sprinting:	
			DURR A 0 offset(-9,32) 
			TNT1 A 0 offset(-9,32) A_JumpIfInventory("IsStandingStill", 1, "Ready3")
			TNT1 A 0 offset(-9,32) A_JumpIfInventory("UsedStamina", 100, "StopSprintTired")
			PLAY A 0 offset(-9,32) ACS_ExecuteAlways(852, 0, 0, 0, 0)//Makes player faster.
			TNT1 A 0 offset(-9,32) A_JumpIfInventory("PowerStrength", 1, 2)
			TNT1 A 0 offset(-9,32) A_GiveInventory("UsedStamina", 9)
			TNT1 A 0 offset(-9,32)
			DURR A 1 offset(-9,34) A_SetPitch(pitch -0.5)
			DURR A 1 offset(-6,36) A_SetPitch(pitch -0.5)
			DURR A 1 offset(-3,38) A_SetPitch(pitch -0.5)
			DURR A 1 offset(0,38) A_SetPitch(pitch -0.5)
			DURR A 1 offset(3,36) A_SetPitch(pitch -0.5)
			DURR A 1 offset(6,34) A_SetPitch(pitch -0.5)
			DURR A 1 offset(9,32) A_SetPitch(pitch -0.5)
			TNT1 A 0 offset(9,32) A_WeaponReady(WRF_NOBOB)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
			TNT1 A 0 A_JumpIfInventory("Reloading",1,"Reload")
			TNT1 A 0 offset(-9,32) A_GiveInventory("UsedStamina", 9)
			TNT1 A 0 offset(9,33) A_SpawnItemEx("FootStep", 0, 0, 2, 0, 0, -4)
			DURR A 1 offset(9,34) A_SetPitch(pitch +0.5)
			DURR A 1 offset(6,36) A_SetPitch(pitch +0.5)
			DURR A 1 offset(3,38) A_SetPitch(pitch +0.5)
			DURR A 1 offset(0,38) A_SetPitch(pitch +0.5)
			DURR A 1 offset(-3,36) A_SetPitch(pitch +0.5)
			DURR A 1 offset(-6,34) A_SetPitch(pitch +0.5)
			DURR A 1 offset(-9,32) A_SetPitch(pitch +0.5)
			TNT1 A 0 offset(-9,32) A_WeaponReady(WRF_NOBOB)
			TNT1 A 0 offset(-9,32) A_JumpIfInventory("IsRunning", 1, "Sprinting")
						PaladinReload:
			P2RR ABCDDDDDDEFGHIIJJKLMNO 2
			TNT1 A 10
			TNT1 A 0 A_PlaySound("RELOAD", 1)//reload sound
			TNT1 A 0 A_JumpIfInventory("HasUnloaded", 1, 2)
			TNT1 A 0 A_FireCustomMissile("PlasmaCaseSpawn",-5,0,8,-4)
			P2RL ABCDDDDDDEFGHIIJJKLMNO 2
			Goto FinishReloadContinue
					Goto StopSprint
		StopSprintTired:
			DURI A 1 
			PLAY A 0 ACS_ExecuteAlways(853, 0, 0, 0, 0)//Makes player slower.
			TNT1 A 0 A_PlaySound("Tired", 2)
			TNT1 A 0 A_TakeInventory("UsedStamina", 2)
			DURI A 5 A_WeaponReady
			TNT1 A 0 A_TakeInventory("UsedStamina", 2)
			DURI A 5 A_WeaponReady
			TNT1 A 0 A_TakeInventory("UsedStamina", 2)
			DURI A 5 A_WeaponReady
			TNT1 A 0 A_TakeInventory("UsedStamina", 2)
			DURI A 5 A_WeaponReady
			TNT1 A 0 A_TakeInventory("UsedStamina", 2)
			DURI A 5 A_WeaponReady
			Goto Ready3
		StopSprint:
			DURI A 1 A_WeaponReady(WRF_NOFIRE)
			TNT1 A 0 A_JumpIfInventory("UsedStamina", 60, "StopSprintTired")
			PLAY A 0 ACS_ExecuteAlways(853, 0, 0, 0, 0)//Makes player slower.
			Goto Ready3
				 DoKick:
			NULL A 0 A_JumpIf (momZ > 0, "AirKick")
			NULL A 0 A_JumpIf (momZ < 0, "AirKick")
					TNT1 A 0 A_jumpifinventory("PowerStrength",1,"BerserkerKick")
			TNT1 A 0 A_PlaySound("KICK")
			TNT1 A 0 SetPlayerProperty(0,1,0)
			KICK ABCDEFG 1
			RIFF A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -7)
			KICK H 6
			KICK IGFEDBA 1
			KICK A 0 A_Takeinventory("Kicking",1)
			TNT1 A 0 SetPlayerProperty(0,0,0)
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			Goto ReadyToFire
		BerserkerKick:
			TNT1 A 0 A_PlaySound("KICK")
			TNT1 A 0 SetPlayerProperty(0,1,0)
			KICK ABCDEFG 1
			RIFF A 0 A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -7)
			KICK H 6
			KICK IGFEDBA 1
			TNT1 A 0 SetPlayerProperty(0,0,0)
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			Goto ReadyToFire
			AirKick:
			TNT1 A 0 A_jumpifinventory("PowerStrength",1,"SuperAirKick")
			TNT1 A 0 A_PlaySound("KICK")
			TNT1 A 0 A_Recoil (-6)
			KLCK JKLMN 1
			RIFF A 0 A_FireCustomMissile("AirKickAttack", 0, 0, 0, -31)
			KLCK O 3
			KLCK A 0 A_Takeinventory("Kicking",1)
			KLCK PQRST 2
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			Goto ReadyToFire
				SuperAirKick:
			TNT1 A 0 A_PlaySound("KICK")
			TNT1 A 0 A_Recoil (-6)
			KLCK JKLMN 1
			RIFF A 0 A_FireCustomMissile("SuperAirKickAttack", 0, 0, 0, -31)
			KLCK O 3
			KLCK A 0 A_Takeinventory("Kicking",1)
			KLCK PQRST 2
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			Goto ReadyToFire
		Taunt:
			TNT1 A 0 A_Takeinventory("Zoomed",1)
			TNT1 A 0 A_ZoomFactor(1.0)
			TNT1 A 10
			FUCK F 1
			TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", 0, 0, -1, 0)
			TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", -9, 0, -1, 0)
			TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", 9, 0, -1, 0)
			FUCK G 1 A_PlaySound("FUCK", 2)
			FUCK HI 1 A_AlertMonsters
			FUCK J 15 A_Takeinventory("Taunting",1)
			FUCK IHGF 1
			TNT1 A 10
			Goto ReadyToFire
		Salute:
			TNT1 A 0 SetPlayerProperty(0,1,0)
			TNT1 A 0 A_ALertMonsters
			SALU ABCDEDCDEDCDEDCBA 4
			TNT1 A 0 A_TakeInventory("Salute1",1)
			TNT1 A 0 A_TakeInventory("Salute2",1)
			TNT1 A 0 SetPlayerProperty(0,0,0)
			Goto ReadyToFire	
		Steady:
		TNT1 A 1
		Goto ReadyToFire	
				Unload:
			TNT1 A 1 A_WeaponReady(WRF_NOBOB)
			TNT1 A 0 A_ZoomFactor(1.0)
			TNT1 A 0 A_Takeinventory("Unloading",1)
			TNT1 A 0 A_Takeinventory("ADSmode",1)
			TNT1 A 0 A_Takeinventory("Zoomed",1)
			TNT1 A 0 A_JumpIfInventory("DoublePlasmaGunzAmmo",1,3)
			Goto Ready
				RemoveBullets:
			TNT1 AAAA 0
			TNT1 A 0 A_JumpIfInventory("DoublePlasmaGunzAmmo",1,3)
			Goto FinishUnload
			TNT1 AAAAAA 0
			TNT1 A 0 A_Takeinventory("Clip1",1)
			TNT1 A 0 A_Takeinventory("DoublePlasmaGunzAmmo",1)
			TNT1 A 0 A_Takeinventory("LeftPlasmaGunAmmo",1)
			TNT1 A 0 A_Giveinventory("Clip1",1)
			Goto RemoveBullets
			FInishUnload:
			TNT1 AAA 0
			TNT1 A 0 A_GiveInventory("StopDualWield")
			TNT1 A 0 A_Takeinventory("Zoomed",1)
			TNT1 A 0 A_PlaySound("Reload")
			TNT1 A 0 A_GiveInventory ("Pumping", 1)
			TNT1 A 0 A_Takeinventory("Unloading",1)
			S2MG TSRQPONMLKJI 1
			SMGR TSRQPONMLKJI 1
			TNT1 A 0 A_GiveInventory("HasUnloaded", 1)
			TNT1 A 0 A_TakeInventory("StopDualWield")
			TNT1 A 0 A_Takeinventory("Unloading",1)
			Goto Ready+6
				}
	}
	ACTOR DoublePlasmaGunzAmmo : Ammo //Your weapon's magazine ammo.
	{
	   Inventory.Amount 0
	   Inventory.MaxAmount 100 //Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
	   Ammo.BackpackAmount 0
	   Ammo.BackpackMaxAmount 100
	   Inventory.Icon "SMGPA0"
	}
	ACTOR LeftPlasmaGunAmmo : Ammo //Your weapon's magazine ammo.
	{
	   Inventory.Amount 0
	   Inventory.MaxAmount 50 //Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
	   Ammo.BackpackAmount 0
	   Ammo.BackpackMaxAmount 50
	   Inventory.Icon SMGPA0
	}